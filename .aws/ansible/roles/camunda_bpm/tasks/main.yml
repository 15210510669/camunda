---
- name: Ensure camunda group is present
  group:
    name: "{{ camunda_group }}"
    state: present
  become: yes

- name: Ensure camunda system user is present
  user:
    name: "{{ camunda_user }}"
    system: yes
    shell: "/sbin/nologin"
    group: "{{ camunda_group }}"
    createhome: no
    state: present
  become: yes

- name: Download tarball of Camunda BPM Platform {{ camunda_server }}
  get_url:
    url: "{{ nexus_url }}/service/local/artifact/maven/redirect?r=camunda-bpm-snapshots&g=org.camunda.bpm.{{ camunda_server }}&a=camunda-bpm-{{ camunda_server }}&v={{ camunda_version }}&e=tar.gz"
    dest: /tmp/camunda-bpm-platform-{{ camunda_server }}.tar.gz
    force_basic_auth: yes
    url_username: "{{ nexus_username }}"
    url_password: "{{ nexus_password }}"
  become: yes

- name: Ensure Camunda installation directory exists
  file:
    path: "{{ camunda_install_dir }}"
    owner: "{{ camunda_user }}"
    group: "{{ camunda_group }}"
    state: directory
  become: yes

- name: Unarchive tarball of latest Camunda BPM Platform {{ camunda_server }}
  unarchive:
    src: /tmp/camunda-bpm-platform-{{ camunda_server }}.tar.gz
    dest: "{{ camunda_install_dir }}"
    owner: "{{ camunda_user }}"
    group: "{{ camunda_group }}"
    remote_src: yes
  become: yes

- name: Find {{ camunda_server }} Home Directory
  find:
    paths: "{{ camunda_install_dir}}"
    patterns: "apache-tomcat*"
    file_type: directory
    recurse: yes
  register: server_home
  become: yes

- name: Set Camunda server directory fact
  set_fact:
    camunda_server_dir: "{{ server_home.files.0.path }}"

- name: Remove original webapps and stuff
  file:
    path: "{{ camunda_server_dir }}/webapps/{{ item }}/"
    state: absent
  with_items:
    - ROOT
    - docs
    - manager
    - host-manager
    - examples
  become: yes

- name: Remove Camunda Invoice example
  file:
    path: "{{ camunda_server_dir }}/webapps/camunda-invoice/"
    state: absent
  when: "{{ remove_camunda_invoice_example }}"
  become: yes

- name: Remove Camunda REST API
  file:
    path: "{{ camunda_server_dir }}/webapps/engine-rest/"
    state: absent
  when: "{{ remove_camunda_rest_api }}"
  become: yes

- name: Remove Camunda WebApp (Cockpit, Tasklist, Admin), Welcome and H2
  file:
    path: "{{ camunda_server_dir }}/webapps/{{ item }}/"
    state: absent
  when: "{{ remove_camunda_webapp }}"
  with_items:
    - camunda
    - camunda-welcome
    - h2
  become: yes

- name: Download PostgreSQL JDBC driver into {{camunda_server}} lib dir
  get_url:
    url: "{{ postgresql_jdbc_driver_url}}"
    dest: "{{ camunda_server_dir }}/lib/"
    owner: "{{ camunda_user }}"
    group: "{{ camunda_group }}"
    mode: 0644
  become: yes

- name: Configure PostgreSQL as {{ camunda_server }} Datasource
  template:
    src: conf/server.xml.j2
    dest: "{{ camunda_server_dir }}/conf/server.xml"
    owner: "{{ camunda_user }}"
    group: "{{ camunda_group }}"
    mode: 0644
  become: yes

- name: Configure Camunda BPM Platform (Job Executor, LDAP)
  template:
    src: conf/bpm-platform.xml.j2
    dest: "{{ camunda_server_dir }}/conf/bpm-platform.xml"
    owner: "{{ camunda_user }}"
    group: "{{ camunda_group }}"
    mode: 0644
  become: yes

- name: Set ownership of Camunda install directory to Camunda user {{ camunda_user }} and Camunda group {{ camunda_group }}
  file:
    path: "{{ camunda_server_dir }}"
    state: directory
    recurse: yes
    owner: "{{ camunda_user }}"
    group: "{{ camunda_group }}"
  become: yes

- name: Ensure Camunda BPM systemd service unit exists
  template:
    src: etc/systemd/system/camunda-bpm.service.j2
    dest: /etc/systemd/system/camunda-bpm.service
    owner: root
    group: root
    mode: 0644
  become: yes

- name: Ensure Camunda BPM systemd service is enabled and started
  systemd:
    name: camunda-bpm
    state: started
    enabled: yes
    daemon_reload: yes
  become: yes
