---
# Taken from https://github.com/s3fs-fuse/s3fs-fuse
- name: Install required dependencies
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - automake
    - autotools-dev
    - g++
    - git
    - libcurl4-gnutls-dev
    - libfuse-dev
    - libssl-dev
    - libxml2-dev
    - make
    - pkg-config

- name: Clone s3fs repository from GitHub
  git:
    repo: https://github.com/s3fs-fuse/s3fs-fuse.git
    dest: /tmp/s3fs-fuse

- name: Compile and install s3fs
  shell: |
    cd /tmp/s3fs-fuse
    ./autogen.sh
    ./configure
    make
    make install

- name: Create mount user
  user:
    name: "{{ s3_mount_user }}"
    system: yes
    createhome: yes
    shell: "{{ s3_mount_user_shell }}"

- name: Force unmount S3 mount directory
  shell: umount s3fs
  ignore_errors: yes

- name: Ensure s3fs mount point and cache directory exists
  file:
    name: "{{ item }}"
    state: directory
    owner: "{{ s3_mount_user }}"
    group: "{{ s3_mount_group }}"
  with_items:
    - "{{s3_mount_dir}}"
    - "{{s3_cache_dir}}"

- name: Enable user_allow_other in /etc/fuse.conf
  lineinfile:
    name: /etc/fuse.conf
    regexp: '^user_allow_other'
    line: 'user_allow_other'

- name: Add S3 bucket mount to /etc/fstab
  lineinfile:
    name: /etc/fstab
    regexp: '^s3fs'
    line: "s3fs#{{ s3_bucket_name }}:{{ s3_bucket_path }} {{ s3_mount_dir }} fuse defaults,noatime,allow_other,mp_umask=027,uid={{ s3_mount_uid }},gid={{ s3_mount_uid }},url={{ s3_url }},endpoint={{ s3_endpoint }},iam_role={{ s3_iam_role }},use_cache={{ s3_cache_dir }},default_acl=private 0 0"
    state: present

- name: Restart fstab mounts
  shell: mount -a

- name: Set current datetime
  set_fact: datetime="{{lookup('pipe','date +%Y%m%d%H%M%S')}}"

- name: Check RW for s3 bucket
  copy:
    content: "{{ datetime }}"
    dest: "{{ s3_mount_dir }}/read-write-test"

#- name: Mount S3 bucket {{ s3_bucket_name }} with IAM role {{ s3_iam_role }}
#  shell: >
#    s3fs -o iam_role= {{ s3_iam_role }}
#    -o allow_other
#    -o url={{ s3_url }}
#    -o endpoint={{ s3_endpoint }}
#    -o enable_content_md5
#    -o use_cache={{ s3_cache_dir }}
#    {{ s3_bucket_name }}:{{ s3_bucket_path }} {{ s3_mount_dir }}
#  when: s3_iam_role != ''
#
#- name: Mount S3 bucket {{ s3_bucket_name }} with Password file
#  shell: >
#    s3fs -o passwd_file={{ s3_password_file }}
#    -o allow_other
#    -o url={{ s3_url }}
#    -o endpoint={{ s3_endpoint }}
#    -o enable_content_md5
#    -o use_cache={{ s3_cache_dir }}
#    {{ s3_bucket_name }}:{{ s3_bucket_path }} {{ s3_mount_dir }}
#  when: s3_password_file != ''
