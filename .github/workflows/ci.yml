
name: CI
on:
  pull_request:
  push:
    branches:
    - master
    - maintenance/*
  workflow_dispatch:

# Will limit the workflow to 1 concurrent run per ref (branch / PR)
# If a new commits occurs, the current run will be canceled
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# set permissions to allow to publish test results
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  unit-tests:
    name: Unit Tests
    uses: ./.github/workflows/unit-tests.yml
    secrets: inherit

  docker:
    if: github.event_name == 'pull_request'
    name: Docker
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
    - name: "Read Java / Version Info"
      id: pom-info
      uses: YunaBraska/java-info-action@eee73ae36952eafc3520d2714562f3e1e7a13407 # 1.12.0
    - name: Login to Harbor registry
      uses: ./.github/actions/login-registry
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: Setup Maven
      uses: ./.github/actions/setup-maven
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: Generate production .tar.gz
      uses: ./.github/actions/run-maven
      with:
        parameters: install -DskipTests -Dskip.docker
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        build-args: |
          VERSION=${{ steps.pom-info.outputs.project_version }}
          REVISION=${{ github.event.pull_request.head.sha }}
        tags: "registry.camunda.cloud/team-optimize/optimize:pr-${{ github.event.pull_request.head.sha }}"
        push: true

  migration:
    name: Migration
    runs-on: gcp-core-8-default
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - name: Setup Maven
      uses: ./.github/actions/setup-maven
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: Login to Harbor registry
      uses: ./.github/actions/login-registry
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: "Read Java / Version Info"
      id: "pom-info"
      uses: YunaBraska/java-info-action@main
    - name: Start Cambpm
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.cambpm.yml
        project_name: cambpm
      env:
        CAMBPM_VERSION: ${{ steps.pom-info.outputs.x_camunda_engine_version }}
        CAMBPM_JVM_MEMORY: 1
    - name: Start Elastic - Old
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch.yml
        project_name: elasticsearch-old
      env:
        ELASTIC_VERSION: ${{ steps.pom-info.outputs.x_previous_optimize_elasticsearch_version }}
        ELASTIC_JVM_MEMORY: 1
        ELASTIC_HTTP_PORT: ${{ steps.pom-info.outputs.x_old_elasticsearch_port }}
    - name: Start Elastic - New
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch.yml
        project_name: elasticsearch-new
      env:
        ELASTIC_VERSION: ${{ steps.pom-info.outputs.x_elasticsearch_test_version }}
        ELASTIC_JVM_MEMORY: 1
        ELASTIC_HTTP_PORT: ${{ steps.pom-info.outputs.x_new_elasticsearch_port }}
    - name: Install
      uses: ./.github/actions/run-maven
      with:
        parameters: install -Pengine-latest -Dskip.fe.build -Dskip.docker -DskipTests
    - name: Verify upgrade
      uses: ./.github/actions/run-maven
      with:
        parameters: verify -Dskip.docker -pl upgrade
    - name: Verify util/optimize-reimport-preparation
      uses: ./.github/actions/run-maven
      with:
        parameters: verify -Dskip.docker -pl util/optimize-reimport-preparation -Pengine-latest,it
    - name: Verify qa/upgrade-tests
      uses: ./.github/actions/run-maven
      with:
        parameters: verify -Dskip.docker -pl qa/upgrade-tests -Pupgrade-es-schema-tests
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: migration-junit
        path: |
          **/failsafe-reports/**/*.xml
          **/*.log
          **/*.json
        retention-days: 7
        if-no-files-found: ignore
    - name: Docker log dump
      uses: ./.github/actions/docker-logs
      if: always()
      with:
        archive_name: migration-docker

  data-upgrade-test:
    name: Data Upgrade Test
    runs-on: gcp-core-8-default
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - name: Setup Maven
      uses: ./.github/actions/setup-maven
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: Login to Harbor registry
      uses: ./.github/actions/login-registry
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: "Read Java / Version Info"
      id: "pom-info"
      uses: YunaBraska/java-info-action@main
    - name: Start Cambpm # Cambpm even needed?
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.cambpm.yml
        project_name: cambpm
      env:
        CAMBPM_VERSION: ${{ steps.pom-info.outputs.x_camunda_engine_version }}
        CAMBPM_JVM_MEMORY: 1
    - name: Start Elastic - Old
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch.yml
        project_name: elasticsearch-old
      env:
        ELASTIC_VERSION: ${{ steps.pom-info.outputs.x_previous_optimize_elasticsearch_version }}
        ELASTIC_JVM_MEMORY: 1
        ELASTIC_HTTP_PORT: ${{ steps.pom-info.outputs.x_old_elasticsearch_port }}
    - name: Start Elastic - New
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch.yml
        project_name: elasticsearch-new
      env:
        ELASTIC_VERSION: ${{ steps.pom-info.outputs.x_elasticsearch_test_version }}
        ELASTIC_JVM_MEMORY: 1
        ELASTIC_HTTP_PORT: ${{ steps.pom-info.outputs.x_new_elasticsearch_port }}
    - name: Install
      uses: ./.github/actions/run-maven
      with:
        parameters: install -Pengine-latest -Dskip.fe.build -Dskip.docker -DskipTests
    - name: Verify qa/upgrade-tests
      uses: ./.github/actions/run-maven
      with:
        parameters: verify -Dskip.docker -Dskip.fe.build -f qa/upgrade-tests -Pupgrade-optimize-data
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: data-upgrade-test-junit
        path: |
          **/failsafe-reports/**/*.xml
          **/*.log
        retention-days: 7
        if-no-files-found: ignore
    - name: Docker log dump
      uses: ./.github/actions/docker-logs
      if: always()
      with:
        archive_name: data-upgrade-test-docker

  integration-tests:
    name: Integration Tests
    runs-on: gcp-core-32-default
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        cambpm: [ 'latest' ]
        elasticsearch: [ '8' ] # exact version is pulled for each from the pom.xml
        includedGroups: [ 'ccsm-test', 'import,eventBasedProcess', 'reportEvaluation', '' ]
        include:
        - includedGroups: 'ccsm-test'
          excludedGroups: ''
          profiles: 'ccsm-it'
          requiresCambpm: false
        - includedGroups: ''
          excludedGroups: 'ccsm-test,import,eventBasedProcess,reportEvaluation'
          profiles: 'it,engine-latest'
          requiresCambpm: true
        - includedGroups: 'import,eventBasedProcess'
          excludedGroups: ''
          profiles: 'it,engine-latest'
          requiresCambpm: true
        - includedGroups: 'reportEvaluation'
          excludedGroups: ''
          profiles: 'it,engine-latest'
          requiresCambpm: true
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - name: Setup Maven
      uses: ./.github/actions/setup-maven
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: Login to Harbor registry
      uses: ./.github/actions/login-registry
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: "Read Java / Version Info"
      id: "pom-info"
      uses: YunaBraska/java-info-action@main
    - name: Expose Parsed Elastic Version
      run: |
        if [[ "${{ matrix.elasticsearch }}" == "7" ]]; then
            echo "ELASTIC_VERSION=${{ steps.pom-info.outputs.x_elasticsearch_test_version }}" >> "$GITHUB_ENV"
        else
            echo "ELASTIC_VERSION=${{ steps.pom-info.outputs.x_elasticsearch8_test_version }}" >> "$GITHUB_ENV"
        fi
    - name: Start Cambpm
      if: ${{ matrix.requiresCambpm }}
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.cambpm.yml
        project_name: cambpm
      env:
        CAMBPM_VERSION: ${{ steps.pom-info.outputs.x_camunda_engine_version }}
        CAMBPM_JVM_MEMORY: 8
    - name: Start Elastic
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch.yml
        project_name: elasticsearch
      env:
        ELASTIC_VERSION: ${{ env.ELASTIC_VERSION }}
        ELASTIC_JVM_MEMORY: 16
        ELASTIC_HTTP_PORT: 9200
    - name: Verify integration
      uses: ./.github/actions/run-maven
      env:
        LIMITS_CPU: 8
      with:
        threads: 8
        parameters: verify -Dit.test.excludedGroups=${{ matrix.excludedGroups }} -Dit.test.includedGroups=${{ matrix.includedGroups }} -Dskip.docker -Dskip.fe.build -P${{ matrix.profiles }} -pl backend -am
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: integration-test-${{ matrix.elasticsearch }}-${{ matrix.includedGroups }}-junit
        path: |
          **/failsafe-reports/**/*.xml
        retention-days: 7
        if-no-files-found: ignore
    - name: Docker log dump
      uses: ./.github/actions/docker-logs
      if: always()
      with:
        archive_name: integration-tests-${{ matrix.elasticsearch }}-${{ matrix.includedGroups }}-docker

  # Only deploy artifacts on push event, which in this case can only be triggered by master and maintenance
  deploy-artifacts:
    if: github.event_name == 'push' && (github.ref_name == 'master' || startsWith(github.ref_name, 'maintenance/'))
    name: Deploy Artifacts
    needs: [unit-tests, migration, data-upgrade-test, integration-tests]
    uses: ./.github/workflows/deploy-artifacts.yml
    secrets: inherit
