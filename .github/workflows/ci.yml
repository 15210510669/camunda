name: CI

on:
  push:
    branches:
      - main
      - stable/*
      - release-*
      - trying
      - staging
  pull_request: { }
  workflow_dispatch: { }
  workflow_call: { }

defaults:
  run:
    # use bash shell by default to ensure pipefail behavior is the default
    # see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#exit-codes-and-error-action-preference
    shell: bash

jobs:
  integration-tests:
    name: "[IT] ${{ matrix.name }}"
    timeout-minutes: 20
    runs-on: [ self-hosted, linux, amd64, "16" ]
    strategy:
      fail-fast: false
      matrix:
        group: [ modules, qa-integration, qa-update ]
        include:
          - group: modules
            name: "Module Integration Tests"
            maven-modules: "'!qa/integration-tests,!qa/update-tests'"
            maven-build-threads: 2
            maven-test-fork-count: 7
            tcc-enabled: 'false'
          - group: qa-integration
            name: "QA Integration Tests"
            maven-modules: "qa/integration-tests"
            maven-build-threads: 1
            maven-test-fork-count: 6
            tcc-enabled: 'false'
            tcc-concurrency: 4
          - group: qa-update
            name: "QA Update Tests"
            maven-modules: "qa/update-tests"
            maven-build-threads: 1
            maven-test-fork-count: 10
            tcc-enabled: 'false'
            tcc-concurrency: 3
    env:
      TC_CLOUD_LOGS_VERBOSE: true
      TC_CLOUD_TOKEN: ${{ matrix.tcc-enabled == 'true' && secrets.TC_CLOUD_TOKEN || '' }}
      TC_CLOUD_CONCURRENCY: ${{ matrix.tcc-concurrency }}
      ZEEBE_TEST_DOCKER_IMAGE: localhost:5000/camunda/zeebe:current-test
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-zeebe
        with:
          maven-cache: 'true'
      - uses: ./.github/actions/build-zeebe
        id: build-zeebe
        with:
          maven-extra-args: -T1C
      - uses: ./.github/actions/build-docker
        with:
          repository: localhost:5000/camunda/zeebe
          version: current-test
          push: true
          distball: ${{ steps.build-zeebe.outputs.distball }}
      - name: Prepare Testcontainers Cloud agent
        if: env.TC_CLOUD_TOKEN != ''
        run: |
          curl -L -o agent https://app.testcontainers.cloud/download/testcontainers-cloud-agent_linux_x86-64
          chmod +x agent
          ./agent --private-registry-url=http://localhost:5000 '--private-registry-allowed-image-name-globs=*,*/*' --terminate > .testcontainers-agent.log 2>&1 &
          ./agent wait
      - name: Create build output log file
        run: echo "BUILD_OUTPUT_FILE_PATH=$(mktemp)" >> $GITHUB_ENV
      - name: Maven Test Build
        run: >
          mvn -B -T ${{ matrix.maven-build-threads }} --no-snapshot-updates
          -D forkCount=${{ matrix.maven-test-fork-count }}
          -D maven.javadoc.skip=true
          -D skipUTs -D skipChecks
          -D failsafe.rerunFailingTestsCount=3 -D flaky.test.reportDir=failsafe-reports
          -P parallel-tests,extract-flaky-tests
          -pl ${{ matrix.maven-modules }}
          -Dit.test="io.camunda.zeebe.it.client.command.CallActivityTest"
          verify
          | tee "${BUILD_OUTPUT_FILE_PATH}"
      - name: Terminate TCC session
        if: env.TC_CLOUD_TOKEN != ''
        run: ./agent terminate
      - name: Duplicate Test Check
        uses: ./.github/actions/check-duplicate-tests
        with:
          buildOutputFilePath: ${{ env.BUILD_OUTPUT_FILE_PATH }}
      - name: Upload test artifacts
        uses: ./.github/actions/collect-test-artifacts
        if: failure()
        with:
          name: "[IT] ${{ matrix.name }}"
  test-summary:
    # Used by bors to check all tests, including the unit test matrix.
    # New test jobs must be added to the `needs` lists!
    # This name is hard-referenced from bors.toml; remember to update that if this name changes
    name: Test summary
    runs-on: ubuntu-latest
    needs:
      - integration-tests
    steps:
      - run: exit 0
  event_file:
    # We need to upload the event file as an artifact in order to support
    # publishing the results of forked repositories
    # https://github.com/EnricoMi/publish-unit-test-result-action#support-fork-repositories-and-dependabot-branches
    name: "Event File"
    runs-on: ubuntu-latest
    needs:
      - integration-tests
      - unit-tests
      - smoke-tests
      - property-tests
      - go-client
    if: always()
    steps:
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}
          retention-days: 1
