name: Tests
on: push

jobs:
  integration-tests:
    name: Docker container tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      TASKLIST_TEST_DOCKER_IMAGE: localhost:5000/camunda/tasklist:current-test
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Check out repository code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Test Dockerfile with Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          ignore: DL3018 # redundant when pinning the base image
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@00bce0da9c4b8be526718f7f5f20a88966f31022
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/github.com/organizations/camunda NEXUS_USR;
            secret/data/github.com/organizations/camunda NEXUS_PSW;
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "17"
          cache: "maven"
      # Use CI Nexus as co-located pull-through cache for Maven artifacts via ~/.m2/settings.xml
      - name: 'Create settings.xml'
        uses: s4u/maven-settings-action@v2.8.0
        with:
          githubServer: false
          servers: |
            [{
              "id": "camunda-nexus",
              "username": "${{ steps.secrets.outputs.NEXUS_USR }}",
              "password": "${{ steps.secrets.outputs.NEXUS_PSW }}"
            }]
          mirrors: '[{"url": "https://repository.nexus.camunda.cloud/content/groups/internal/", "id": "camunda-nexus", "mirrorOf": "*", "name": "camunda Nexus"}]'
      - name: Build backend
        run: mvn clean install -P -docker -DskipTests=true -B -DskipRemoteStaging=true -Dmaven.deploy.skip=true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Build and push to local registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.TASKLIST_TEST_DOCKER_IMAGE }}
          cache-from: type=gha,ignore-error=true
          cache-to: type=gha,mode=max,ignore-error=true
          no-cache-filters: build,distball,dist
      - name: Run Docker tests
        run: mvn -f qa/integration-tests -Dtest=StartupIT -Dsurefire.failIfNoSpecifiedTests=false -Dspring.profiles.active=docker-test test
      - name: Upload Test Report
        if: failure()
        uses: ./.github/actions/collect-test-artifacts
        with:
          name: "docker tests"
