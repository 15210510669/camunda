name: Tests
on: push

jobs:
  integration-tests:
    name: Docker container tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      TASKLIST_TEST_DOCKER_IMAGE: localhost:5000/camunda/tasklist:current-test
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@cb841f2c86fb6d07cff94fda240828c1abc5ba43
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/github.com/organizations/camunda NEXUS_USR;
            secret/data/github.com/organizations/camunda NEXUS_PSW;
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "17"
          cache: "maven"
      # Use CI Nexus as co-located pull-through cache for Maven artifacts via ~/.m2/settings.xml
      - name: 'Create settings.xml'
        uses: s4u/maven-settings-action@v2.8.0
        with:
          githubServer: false
          servers: |
            [{
              "id": "camunda-nexus",
              "username": "${{ steps.secrets.outputs.NEXUS_USR }}",
              "password": "${{ steps.secrets.outputs.NEXUS_PSW }}"
            }]
          mirrors: '[{"url": "https://repository.nexus.camunda.cloud/content/groups/internal/", "id": "camunda-nexus", "mirrorOf": "*", "name": "camunda Nexus"}]'
      - name: Build backend
        run: mvn clean install -P -docker -DskipTests=true -B -DskipRemoteStaging=true -Dmaven.deploy.skip=true
      - name: Build Docker and push to local registry
        run: mvn -pl webapp jib:build -Dimage=${{ env.TASKLIST_TEST_DOCKER_IMAGE }} -Djib.allowInsecureRegistries=true
        env:
          IMAGE_TAG: ${{ env.BRANCH_NAME }}
      - name: Run Docker tests
        run: mvn -f qa/integration-tests -Dtest=StartupIT -Dsurefire.failIfNoSpecifiedTests=false -Dspring.profiles.active=docker-test test
      - name: Upload Test Report
        if: failure()
        uses: ./.github/actions/collect-test-artifacts
        with:
          name: "docker tests"
