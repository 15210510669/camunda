name: Trivy check docker image

on: [push]

permissions:
  contents: read # for git clone
  id-token: write # for authenticating with GCP
  issues: write
  pull-requests: write

env:
  IMAGE_NAME: optimize/test
  IMAGE_TAG: latest

jobs:
  trivy-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Import secrets
        id: secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/optimize/ci/optimize NEXUS_USERNAME;
            secret/data/products/optimize/ci/optimize NEXUS_PASSWORD;

      - name: Configure Google tools
        id: auth
        uses: camunda-cloud/action-setup-gcloud@v2
        with:
          account-alias: registry

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "11"
          cache: "maven"

      - name: "Create settings.xml"
        uses: s4u/maven-settings-action@v2.8.0
        with:
          githubServer: false
          servers: |
            [{
              "id": "camunda-nexus",
              "username": "${{ steps.secrets.outputs.NEXUS_USERNAME }}",
              "password": "${{ steps.secrets.outputs.NEXUS_PASSWORD }}"
            }]
          mirrors: '[{"url": "https://repository.nexus.camunda.cloud/content/groups/internal/", "id": "camunda-nexus", "mirrorOf": "*", "name": "camunda Nexus"}]'

      - name: Build a package
        run: mvn -B package --file pom.xml -Dmaven.test.skip

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Build local image for testing
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          build-args: |
            VERSION=3.10.0-SNAPSHOT
            REVISION= ${{ github.sha }}
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          exit-code: "1"
          ignore-unfixed: true
          hide-progress: true
          severity: "CRITICAL,HIGH"
          format: json
          output: trivy-log.json

      - name: Publish results in PR comment
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const path = require('path');

            const fileBuffer = fs.readFileSync(path.join('trivy-log.json'));
            const file = JSON.parse(fileBuffer);

            const vulnerabilities = file.Results.filter((result) => result.Vulnerabilities !== undefined)
              .map((result) => result?.Vulnerabilities)
              .flat();

            const vulnCountMap = vulnerabilities
              .map((result) => result.Severity)
              .reduce(
                (sum, vuln) => {
                  sum[vuln] += 1;
                  return sum;
                },
                {HIGH: 0, CRITICAL: 0}
              );

            const vulnCount = Object.values(vulnCountMap).reduce((sum, curr) => {
              return sum + curr;
            }, 0);

            const vulnCommentContent = Object.entries(vulnCountMap)
              .map(([vuln, count]) => {
                return `${count > 0 ? 'ðŸ”´' : 'ðŸŸ¢'} ${count} ${vuln}\n`;
              })
              .join('');

            const table =
              vulnCount > 0
                ? `
            <details>
              <summary>See the full results</summary>

              <table>
                <tr>
                  <th>Package</th>
                  <th>Vulnerability ID</th>
                  <th>Severity</th>
                  <th>Installed Version</th>
                  <th>Fixed Version</th>
                </tr>
              ${vulnerabilities
                .map(({PkgName, VulnerabilityID, Severity, InstalledVersion, FixedVersion, PrimaryURL}) => {
                  return `<tr><td>${PkgName}</td><td><a href="${PrimaryURL}">${VulnerabilityID}</a></td><td>${Severity}</td><td>${InstalledVersion}</td><td>${FixedVersion}</td></tr>\n`;
                })
                .join('')}
              </table>
            </details>`
                : '';

            const commentContent = `
            Hi! This is your trivy test results ðŸ§ª\n
            There are ${vulnCount} problems found:\n
            ${vulnCommentContent}
            ${table}  
            `;

            const issues = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`
            })

            github.rest.issues.createComment({
              issue_number: context.issue.number || issues.data[0].number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentContent
            })
