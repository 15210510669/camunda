name: Trivy check docker image

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * 1-5"

permissions:
  contents: read
  id-token: write

jobs:
  trivy-check:
    name: Run trivy check
    strategy:
      fail-fast: false
      matrix:
        branch:
          [
            "OPT-6770",
            # "master",
            # "maintenance/3.10",
            # "maintenance/3.9",
            # "maintenance/3.8",
            # "maintenance/3.7",
          ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}

      - name: "Read Java Info"
        id: "pom-info"
        uses: YunaBraska/java-info-action@main

      - name: Setup Maven
        uses: ./.github/actions/setup-maven
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Checkout code 2 # we do it cause setup maven step does the checkout to current branch
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch}}

      - name: Configure Google tools
        id: auth
        uses: camunda-cloud/action-setup-gcloud@v2
        with:
          account-alias: registry

      - name: Build a package
        uses: ./.github/actions/run-maven
        with:
          parameters: clean install -DskipTests -Dskip.docker

      - name: Expose common variables as Env
        run: |
          {
            echo "PUSH_LATEST_TAG=false"
            echo "IS_MAIN=false"
            echo "CI=false"
            BRANCH=${{ matrix.branch }}
            echo "DOCKER_BRANCH_TAG=${BRANCH//\//-}"
            echo "DOCKER_IMAGE_TEAM=optimize/test"
            echo "DOCKER_TAG=latest"
            echo "VERSION=${{ steps.pom-info.outputs.project_version }}"
            echo "REVISION=${{ github.sha }}"
            echo "PUSH_PLATFORM_TAGS=true"
          } >> "$GITHUB_ENV"

      - name: Import secrets
        id: secrets
        uses: hashicorp/vault-action@cb841f2c86fb6d07cff94fda240828c1abc5ba43
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/optimize/ci/camunda-optimize REGISTRY_HUB_DOCKER_COM_USR;
            secret/data/products/optimize/ci/camunda-optimize REGISTRY_HUB_DOCKER_COM_PSW;

      - name: Login to Harbor registry
        uses: ./.github/actions/login-registry
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Login to Harbor docker registery
        uses: docker/login-action@v2
        with:
          username: ${{ steps.secrets.outputs.REGISTRY_HUB_DOCKER_COM_USR }}
          password: ${{ steps.secrets.outputs.REGISTRY_HUB_DOCKER_COM_PSW }}

      - name: Build local image for testing
        run: ./.github/scripts/build-docker-images.sh

      - name: Run Trivy vulnerability scanner AMD
        if: always()
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE_TEAM }}:${{ env.DOCKER_TAG }}-AMD64
          exit-code: "1"
          ignore-unfixed: true
          hide-progress: true
          severity: "CRITICAL,HIGH"
          format: table
          output: ${{ steps.pom-info.outputs.project_version }}-amd64-trivy-log.txt

      - name: Run Trivy vulnerability scanner ARM
        if: always()
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE_TEAM }}:${{ env.DOCKER_TAG }}-ARM64
          exit-code: "1"
          ignore-unfixed: true
          hide-progress: true
          severity: "CRITICAL,HIGH"
          format: table
          output: ${{ steps.pom-info.outputs.project_version }}-arm64-trivy-log.txt

      - name: Print Test Results
        if: always()
        run: |
          cat ${{ steps.pom-info.outputs.project_version }}-amd64-trivy-log.txt
          cat ${{ steps.pom-info.outputs.project_version }}-arm64-trivy-log.txt

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: trivy-test-results
          path: |
            **/${{ steps.pom-info.outputs.project_version }}-amd64-trivy-log.txt
            **/${{ steps.pom-info.outputs.project_version }}-arm64-trivy-log.txt
          retention-days: 7
          if-no-files-found: ignore

  # post-results-on-slack:
  #   name: Post results on slack
  #   if: failure()
  #   needs:
  #     - trivy-check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Import secrets
  #       id: secrets
  #       uses: hashicorp/vault-action@62aa8bb4c43190676348ad2b146075f0421136db
  #       with:
  #         url: ${{ secrets.VAULT_ADDR }}
  #         method: approle
  #         roleId: ${{ secrets.VAULT_ROLE_ID }}
  #         secretId: ${{ secrets.VAULT_SECRET_ID }}
  #         secrets: |
  #           secret/data/products/optimize/ci/camunda-optimize SLACK_BOT_URL;

  #     - name: Post results on slack
  #       uses: ./.github/actions/notify-on-slack
  #       with:
  #         slack_webhook_url: ${{ steps.secrets.outputs.SLACK_BOT_URL}}
