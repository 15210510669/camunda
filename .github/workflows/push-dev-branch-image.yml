name: Create docker image from a dev branch and deploy it to GCR

on:
  workflow_dispatch:
    inputs:
      image_tag:
        required: true
        description: 'Required format: 3.x.branchnumber-SNAPSHOT, eg 3.12.6861-SNAPSHOT for a branch called OPT-6861'
env:
  IMAGE_NAME: optimize
permissions:
  contents: read  # for git clone
  id-token: write # for authenticating with GCP
jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      # The nexus username and pwd are being read from the VAULT secret management
      # that is being administrated by infra.
      - name: Import secrets
        id: secrets
        uses: hashicorp/vault-action@d1720f055e0635fd932a1d2a48f87a666a57906c
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/optimize/ci/optimize NEXUS_USERNAME;
            secret/data/products/optimize/ci/optimize NEXUS_PASSWORD;

      - name: Set image build label from ISO 8601 DATE
        id: get-date
        shell: bash
        run: echo "result=$(date --iso-8601=seconds)" >> "$GITHUB_OUTPUT"

      # Configure the registry where we can push the GH IMAGE
      - name: Configure Google tools
        id: auth
        uses: camunda-cloud/action-setup-gcloud@aed04dff4f99e58cec247cb920d2f7d49b8daf74 # v3
        with:
          account-alias: registry

      # SET UP JAVA
      - name: Set up JDK 17
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4
        with:
          java-version: 17
          distribution: 'temurin'

      # SET UP MAVEN XML
      - name: 'Create settings.xml'
        uses: s4u/maven-settings-action@7802f6aec16c9098b4798ad1f1d8ac75198194bd # v3.0.0
        with:
          githubServer: false
          servers: |
            [{
              "id": "camunda-nexus",
              "username": "${{ steps.secrets.outputs.NEXUS_USERNAME }}",
              "password": "${{ steps.secrets.outputs.NEXUS_PASSWORD }}"
            }]
          mirrors: '[{"url": "https://repository.nexus.camunda.cloud/content/groups/internal/", "id": "camunda-nexus", "mirrorOf": "*", "name": "camunda Nexus"}]'

      # CREATE JAR FILE
      - name: Build a package
        run: mvn -B package --file pom.xml -Dmaven.test.skip

     # COMPUTE IMAGE NAME & TAG NAME
      - name: Compute metadata
        id: meta
        run: |
          echo "sha=${{ github.sha }}" >> "$GITHUB_OUTPUT"
          echo "docker_image=gcr.io/${{ steps.auth.outputs.project_id }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.image_tag }}" >> "$GITHUB_OUTPUT"

      # This action equates to:
      # docker buildx build -t registry.camunda.cloud/team-optimize/optimize:OPT-xxxx
      # --build-arg VERSION=3.11.0-SNAPSHOT --build-arg DATE=2022-12-08T15:25:30.165965Z
      # --build-arg REVISION=cb723f69397c60c7f513ca58c99473e5c8431a27 --platform linux/amd64,linux/arm64 --push .
      - name: Build and Push
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5
        with:
          context: .
          provenance: false
          push: true
          platforms: linux/amd64
          build-args: |
            VERSION=3.12.0-SNAPSHOT
            DATE= ${{ steps.get-date.outputs.result }}
            REVISION= ${{ github.sha }}
          tags: ${{ steps.meta.outputs.docker_image }}
