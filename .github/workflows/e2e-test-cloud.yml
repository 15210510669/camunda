name: e2e cloud test

on: [push]

jobs:
  e2e-cloud-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - name: Import secrets
      id: secrets
      uses: hashicorp/vault-action@4727f0b168d8639c44348d24558eac84d2b164cc
      with:
        url: ${{ secrets.VAULT_ADDR }}
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        secrets: |
          secret/data/products/optimize/ci/jenkins AUTH0_CLIENTSECRET;
          secret/data/products/optimize/ci/jenkins AUTH0_USEREMAIL;
          secret/data/products/optimize/ci/jenkins AUTH0_USERPASSWORD;
    - name: Setup Maven
      uses: ./.github/actions/setup-maven
      with:
          secrets: ${{ toJSON(secrets) }}
          java-version: 17
          distribution: zulu
    - name: "Read Java / Version Info"
      id: "pom-info"
      uses: YunaBraska/java-info-action@main
    - name: Start Elastic search
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch.yml
        project_name: elasticsearch
      env:
        ELASTIC_VERSION: ${{ steps.pom-info.outputs.x_elasticsearch8_test_version }}
        ELASTIC_JVM_MEMORY: 1
        ELASTIC_HTTP_PORT: ${{ steps.pom-info.outputs.x_new_elasticsearch_port }}
    - name: Setup yarn cache
      uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4
      with:
        node-version: "16"
        cache: "yarn"
        cache-dependency-path: client/yarn.lock    
    - name: Install node dependencies
      working-directory: ./client
      run: yarn install
    - name: 'build backend & frontend'
      run: mvn clean install -DskipTests -Dskip.docker -pl backend,qa/data-generation -am
    - name: 'start backend'
      working-directory: ./client
      run: |
        yarn run start-backend-cloud ci &
    - name: Start frontend app
      working-directory: ./client
      run: yarn start &
    - name: Wait for backend to start
      run: ./.github/scripts/wait-for.sh http://localhost:8090/api/readyz
    - name: Wait for frontend to start
      run: ./.github/scripts/wait-for.sh http://localhost:3000/ready
    - name: 'start e2e test'
      working-directory: ./client
      env:
        AUTH0_CLIENTSECRET: "${{ steps.secrets.outputs.AUTH0_CLIENTSECRET }}"
        AUTH0_USEREMAIL: "${{ steps.secrets.outputs.AUTH0_USEREMAIL }}"
        AUTH0_USERPASSWORD: "${{ steps.secrets.outputs.AUTH0_USERPASSWORD }}"
      run: yarn run e2e:ci:cloud:headless