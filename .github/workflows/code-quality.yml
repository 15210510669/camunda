name: Code quality
on:
  push:
    branches:
      - main
      - stable/*
      - release-*
      - trying
      - staging
  pull_request: {}
jobs:
  snyk:
    name: Snyk
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - uses: snyk/actions/setup@0.3.0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - uses: actions/setup-go@v3
        with:
          go-version: v1.15
      - name: Scan for vulnerabilities
        run: snyk test --org=team-zeebe --sarif-file-output=snyk.sarif --all-projects
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Prepare scan results
        # Snyk produces sarif files with one "run" per project.
        # That's too much for GH, so we need to merge the runs first.
        uses: microsoft/sarif-actions@v0.1
        with:
          command: merge --merge-runs --output-file snyk-merged.sarif snyk.sarif
      - name: Upload scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk-merged.sarif
  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3.3.0
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
          queries: +security-and-quality
      - name: Build
        run: mvn -B -T1C -DskipTests -DskipChecks install
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  go-lint:
    name: Go linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.32
          working-directory: clients/go
  java-format:
    name: Java formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3.3.0
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      # install build tools first so changes to tool configuration is available downstream
      - run: mvn -T1C -B -D skipTests -D skipChecks install -pl build-tools
      - run: mvn -T1C -B -D skipTests -P checkFormat,-autoFormat validate
