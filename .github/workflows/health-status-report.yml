name: Optimize health status report

on:
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * 1-5"

permissions:
  contents: read
  actions: read
  pull-requests: read

jobs:
  health-status-report:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Import secrets
        id: secrets
        uses: hashicorp/vault-action@affa6f04da5c2d55e6e115b7d1b044a6b1af8c74 # v2.7.4
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/optimize/ci/camunda-optimize SLACK_API_KEY;
            secret/data/products/optimize/ci/camunda-optimize ARGOCD_TOKEN;
            secret/data/products/optimize/ci/camunda-optimize SNYK_TOKEN;

      - name: Genetare config file
        run: |
          cd ${{ github.workspace }}/.github/scripts/healthStatusReport
          yarn
          npx ts-node createHealthStatusConfig.ts
          cat config.json

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARGOCD_TOKEN: ${{ steps.secrets.outputs.ARGOCD_TOKEN }}
          SNYK_TOKEN: ${{ steps.secrets.outputs.SNYK_TOKEN }}

      - name: Get health status report
        uses: misiekhardcore/infra-report-action@0d42f369de8b31ade36fdfaf9c30d1894e247a54 # v1.3.2
        id: get-report
        with:
          config_file_path: ${{ github.workspace }}/.github/scripts/healthStatusReport/config.json
          github_token: ${{ secrets.GITHUB_TOKEN }}
          argocd_token: ${{ steps.secrets.outputs.ARGOCD_TOKEN }}
          snyk_token: ${{ steps.secrets.outputs.SNYK_TOKEN }}

      - name: Send report to slack channel
        uses: slackapi/slack-github-action@6c661ce58804a1a20f6dc5fbee7f0381b469e001 # v1.25.0
        with:
          channel-id: "#optimize-health-status-update"
          slack-message: ${{ steps.get-report.outputs.infra_report }}
        env:
          SLACK_BOT_TOKEN: ${{ steps.secrets.outputs.SLACK_API_KEY }}
