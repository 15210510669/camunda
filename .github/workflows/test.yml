name: Tests

on:
  push:
    branches:
      - stable/*
      - release-*
      - trying
      - staging
  pull_request: { }
  workflow_dispatch: { }
  workflow_call: { }

defaults:
  run:
    # use bash shell by default to ensure pipefail behavior is the default
    # see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#exit-codes-and-error-action-preference
    shell: bash

jobs:
  integration-tests:
    name: Integration tests
    runs-on: "n1-standard-32-netssd-preempt"
    timeout-minutes: 45
    env:
      TC_CLOUD_TOKEN: ${{ secrets.TC_CLOUD_TOKEN }}
      TC_CLOUD_CONCURRENCY: 4
      ZEEBE_TEST_DOCKER_IMAGE: localhost:5000/camunda/zeebe:current-test
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-zeebe
      - uses: ./.github/actions/use-ci-nexus-cache
      - uses: ./.github/actions/build-zeebe
        id: build-zeebe
      - uses: ./.github/actions/build-docker
        with:
          repository: localhost:5000/camunda/zeebe
          version: current-test
          push: true
          distball: ${{ steps.build-zeebe.outputs.distball }}
      - name: Prepare Testcontainers Cloud agent
        if: env.TC_CLOUD_TOKEN != ''
        run: |
          curl -L -o agent https://app.testcontainers.cloud/download/testcontainers-cloud-agent_linux_x86-64
          chmod +x agent
          ./agent --private-registry-url=http://localhost:5000 '--private-registry-allowed-image-name-globs=*,*/*' &
          ./agent wait
      - name: Create build output log file
        run: echo "BUILD_OUTPUT_FILE_PATH=$(mktemp)" >> $GITHUB_ENV
      - name: Maven Test Build
        run: >
          mvn -B -T2 --no-snapshot-updates
          -D junitThreadCount=12
          -D skipUTs -D skipChecks
          -D failsafe.rerunFailingTestsCount=3 -D flaky.test.reportDir=failsafe-reports
          -P parallel-tests,extract-flaky-tests
          verify
          | tee "${BUILD_OUTPUT_FILE_PATH}"
      - name: Duplicate Test Check
        uses: ./.github/actions/check-duplicate-tests
        with:
          buildOutputFilePath: ${{ env.BUILD_OUTPUT_FILE_PATH }}
      - name: Upload test artifacts
        uses: ./.github/actions/collect-test-artifacts
        if: always()
        with:
          name: Integration Tests
  unit-tests:
    name: Unit tests
    runs-on: "n1-standard-16-netssd-preempt"
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-zeebe
        with:
          go: false
      - uses: ./.github/actions/use-ci-nexus-cache
      - uses: ./.github/actions/build-zeebe
        with:
          go: false
      - name: Create build output log file
        run: echo "BUILD_OUTPUT_FILE_PATH=$(mktemp)" >> $GITHUB_ENV
      - name: Maven Test Build
        run: >
          mvn -B --no-snapshot-updates
          -D skipITs -D skipChecks
          -D junitThreadCount=16
          -P parallel-tests
          verify
          | tee "${BUILD_OUTPUT_FILE_PATH}"
      - name: Normalize artifact name
        run: echo "ARTIFACT_NAME=$(echo ${{ matrix.project }} | sed 's/\//-/g')" >> $GITHUB_ENV
      - name: Duplicate Test Check
        uses: ./.github/actions/check-duplicate-tests
        with:
          buildOutputFilePath: ${{ env.BUILD_OUTPUT_FILE_PATH }}
      - name: Upload test artifacts
        uses: ./.github/actions/collect-test-artifacts
        if: always()
        with:
          name: "unit tests"
  smoke-tests:
    name: Smoke tests on ${{ matrix.os }}
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    env:
      JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-zeebe
        with:
          go: false
          # setting up maven often times out on macOS
          maven: ${{ matrix.os != 'macos-latest' }}
      - uses: ./.github/actions/build-zeebe
        with:
          go: false
          maven-extra-args: -am -pl qa/integration-tests
      - name: Run smoke test
        run: >
          mvn -B --no-snapshot-updates
          -DskipUTs -DskipChecks
          -pl qa/integration-tests
          -P smoke-test
          verify
      - name: Upload test artifacts
        uses: ./.github/actions/collect-test-artifacts
        if: always()
        with:
          name: Smoke Tests ${{ matrix.os }}
  property-tests:
    name: Property Tests
    runs-on: "n1-standard-16-netssd-preempt"
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-zeebe
        with:
          go: false
      - uses: ./.github/actions/use-ci-nexus-cache
      - uses: ./.github/actions/build-zeebe
        with:
          go: false
      - name: Create build output log file
        run: echo "BUILD_OUTPUT_FILE_PATH=$(mktemp)" >> $GITHUB_ENV
      - name: Maven Test Build
        run: >
          mvn -T1C -B
          -P parallel-tests,include-random-tests
          -D junitThreadCount=16
          -D skipChecks
          test
          | tee "${BUILD_OUTPUT_FILE_PATH}"
      - name: Duplicate Test Check
        uses: ./.github/actions/check-duplicate-tests
        with:
          buildOutputFilePath: ${{ env.BUILD_OUTPUT_FILE_PATH }}
      - name: Upload test artifacts
        uses: ./.github/actions/collect-test-artifacts
        if: always()
        with:
          name: Property Tests
  go-client:
    name: Go client tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-zeebe
      - uses: ./.github/actions/build-zeebe
        id: build-zeebe
      # Once we're on Go 1.18, use the official gorelease to do this
      - name: Check backwards compatibility
        working-directory: clients/go/
        run: |
          go install github.com/smola/gocompat/...@v0.3.0
          PREFIX=github.com/camunda/zeebe/clients/go/v8
          EXCLUDE=""
          for file in {internal,cmd/zbctl/internal}/*; do
            EXCLUDE="$EXCLUDE --exclude-package $PREFIX/$file"
          done
          gocompat compare --go1compat ${EXCLUDE} ./...
      - uses: ./.github/actions/build-docker
        id: build-docker
        with:
          repository: camunda/zeebe
          version: current-test
          distball: ${{ steps.build-zeebe.outputs.distball }}
      - name: Run Go tests
        working-directory: clients/go
        run: go test -mod=vendor -v ./...
  java-client:
    name: Java client tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
      # First package the complete application
      - uses: ./.github/actions/setup-zeebe
        with:
          go: false
      - uses: ./.github/actions/build-zeebe
        with:
          go: false
          maven-extra-args: -am -pl clients/java
      # This is a workaround for java 8, which does not support the --add-exports options
      - run: rm .mvn/jvm.config
      # Then run client tests with JDK 8
      - uses: actions/setup-java@v3.5.0
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
      - name: Create build output log file
        run: echo "BUILD_OUTPUT_FILE_PATH=$(mktemp)" >> $GITHUB_ENV
      - name: Maven Test Build
        run: >
          mvn -B
          -P disableCheckstyle,extract-flaky-tests
          -D skipChecks -D skipITs
          -D surefire.rerunFailingTestsCount=3
          -pl clients/java
          verify
          | tee "${BUILD_OUTPUT_FILE_PATH}"
      - name: Duplicate Test Check
        uses: ./.github/actions/check-duplicate-tests
        with:
          buildOutputFilePath: ${{ env.BUILD_OUTPUT_FILE_PATH }}
      - name: Upload test artifacts
        uses: ./.github/actions/collect-test-artifacts
        if: always()
        with:
          name: Java 8 Client

  # Used by bors to check all tests, including the unit test matrix.
  # New test jobs must be added to the `needs` lists!
  # This name is hard-referenced from bors.toml; remember to update that if this name changes
  test-summary:
    name: Test summary
    runs-on: ubuntu-latest
    needs:
      - integration-tests
      - unit-tests
      - smoke-tests
      - property-tests
      - go-client
      - java-client
    steps:
      - run: exit 0

  # We need to upload the event file as an artifact in order to support
  # publishing the results of forked repositories
  # https://github.com/EnricoMi/publish-unit-test-result-action#support-fork-repositories-and-dependabot-branches
  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Event File
          path: ${{ github.event_path }}
          retention-days: 1
