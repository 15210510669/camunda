
name: Optimize CI
on:
  pull_request:
  push:
    branches:
    - master
    - maintenance/*
    - release/*
  workflow_dispatch:

# Will limit the workflow to 1 concurrent run per ref (branch / PR)
# If a new commits occurs, the current run will be canceled
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# set permissions to allow to publish test results
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  unit-tests:
    name: Unit Tests
    uses: ./.github/workflows/optimize-unit-tests.yml
    secrets: inherit

  docker:
    if: github.event_name == 'pull_request'
    name: Docker
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
    - name: "Read Java / Version Info"
      id: pom-info
      uses: YunaBraska/java-info-action@a39db57e7ff3656a1ad67b920444363dd1ec11e9 # 2.0.0
    - name: Login to Harbor registry
      uses: ./.github/actions/login-registry
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: Setup Maven
      uses: ./.github/actions/setup-maven
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: Generate production .tar.gz
      uses: ./.github/actions/run-maven
      with:
        parameters: install -DskipTests -Dskip.docker
    - name: Build and push Docker image
      uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5
      with:
        context: .
        provenance: false
        build-args: |
          VERSION=${{ steps.pom-info.outputs.project_version }}
          REVISION=${{ github.event.pull_request.head.sha }}
        tags: "registry.camunda.cloud/team-optimize/optimize:pr-${{ github.event.pull_request.head.sha }}"
        push: true

  migration:
    name: Migration
    runs-on: gcp-core-8-default
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
    - name: Setup Maven
      uses: ./.github/actions/setup-maven
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: Login to Harbor registry
      uses: ./.github/actions/login-registry
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: "Read Java / Version Info"
      id: "pom-info"
      uses: YunaBraska/java-info-action@main
    - name: Start Cambpm
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.cambpm.yml
        project_name: cambpm
      env:
        CAMBPM_VERSION: ${{ steps.pom-info.outputs.x_camunda_engine_version }}
        CAMBPM_JVM_MEMORY: 1
    - name: Start Elastic - Old
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch.yml
        project_name: elasticsearch-old
      env:
        ELASTIC_VERSION: ${{ steps.pom-info.outputs.x_previous_optimize_elasticsearch_version }}
        ELASTIC_JVM_MEMORY: 1
        ELASTIC_HTTP_PORT: ${{ steps.pom-info.outputs.x_old_elasticsearch_port }}
    - name: Start Elastic - New
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch.yml
        project_name: elasticsearch-new
      env:
        ELASTIC_VERSION: ${{ steps.pom-info.outputs.x_elasticsearch_test_version }}
        ELASTIC_JVM_MEMORY: 1
        ELASTIC_HTTP_PORT: ${{ steps.pom-info.outputs.x_new_elasticsearch_port }}
    - name: Install
      uses: ./.github/actions/run-maven
      with:
        parameters: install -Pengine-latest -Dskip.fe.build -Dskip.docker -DskipTests
    - name: Verify upgrade
      uses: ./.github/actions/run-maven
      with:
        parameters: verify -Dskip.docker -pl upgrade
    - name: Verify util/optimize-reimport-preparation
      uses: ./.github/actions/run-maven
      with:
        parameters: verify -Dskip.docker -pl util/optimize-reimport-preparation -Pengine-latest,it
    - name: Verify qa/upgrade-tests
      uses: ./.github/actions/run-maven
      with:
        parameters: verify -Dskip.docker -pl qa/upgrade-tests -Pupgrade-es-schema-tests
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
      with:
        name: migration-junit
        path: |
          **/failsafe-reports/**/*.xml
          **/*.log
          **/*.json
        retention-days: 7
        if-no-files-found: ignore
    - name: Docker log dump
      uses: ./.github/actions/docker-logs
      if: always()
      with:
        archive_name: migration-docker

  data-upgrade-test:
    name: Data Upgrade Test
    runs-on: gcp-core-8-default
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
    - name: Setup Maven
      uses: ./.github/actions/setup-maven
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: Login to Harbor registry
      uses: ./.github/actions/login-registry
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: "Read Java / Version Info"
      id: "pom-info"
      uses: YunaBraska/java-info-action@main
    - name: Start Cambpm # Cambpm even needed?
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.cambpm.yml
        project_name: cambpm
      env:
        CAMBPM_VERSION: ${{ steps.pom-info.outputs.x_camunda_engine_version }}
        CAMBPM_JVM_MEMORY: 1
    - name: Start Elastic - Old
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch.yml
        project_name: elasticsearch-old
      env:
        ELASTIC_VERSION: ${{ steps.pom-info.outputs.x_previous_optimize_elasticsearch_version }}
        ELASTIC_JVM_MEMORY: 1
        ELASTIC_HTTP_PORT: ${{ steps.pom-info.outputs.x_old_elasticsearch_port }}
    - name: Start Elastic - New
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch.yml
        project_name: elasticsearch-new
      env:
        ELASTIC_VERSION: ${{ steps.pom-info.outputs.x_elasticsearch_test_version }}
        ELASTIC_JVM_MEMORY: 1
        ELASTIC_HTTP_PORT: ${{ steps.pom-info.outputs.x_new_elasticsearch_port }}
    - name: Install
      uses: ./.github/actions/run-maven
      with:
        parameters: install -Pengine-latest -Dskip.fe.build -Dskip.docker -DskipTests
    - name: Verify qa/upgrade-tests
      uses: ./.github/actions/run-maven
      with:
        parameters: verify -Dskip.docker -Dskip.fe.build -f qa/upgrade-tests -Pupgrade-optimize-data
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
      with:
        name: data-upgrade-test-junit
        path: |
          **/failsafe-reports/**/*.xml
          **/*.log
        retention-days: 7
        if-no-files-found: ignore
    - name: Docker log dump
      uses: ./.github/actions/docker-logs
      if: always()
      with:
        archive_name: data-upgrade-test-docker

  integration-tests:
    name: Integration Tests
    runs-on: gcp-core-32-default
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        cambpm: [ 'latest' ]
        includedGroups: [ 'ccsm-test', 'import,eventBasedProcess', 'reportEvaluation', '' ]
        include:
        - includedGroups: 'ccsm-test'
          excludedGroups: ''
          profiles: 'ccsm-it'
          requiresCambpm: false
        - includedGroups: ''
          excludedGroups: 'ccsm-test,import,eventBasedProcess,reportEvaluation'
          profiles: 'it,engine-latest'
          requiresCambpm: true
        - includedGroups: 'import,eventBasedProcess'
          excludedGroups: ''
          profiles: 'it,engine-latest'
          requiresCambpm: true
        - includedGroups: 'reportEvaluation'
          excludedGroups: ''
          profiles: 'it,engine-latest'
          requiresCambpm: true
    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
    - name: Setup Maven
      uses: ./.github/actions/setup-maven
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: Login to Harbor registry
      uses: ./.github/actions/login-registry
      with:
        secrets: ${{ toJSON(secrets) }}
    - name: "Read Java / Version Info"
      id: "pom-info"
      uses: YunaBraska/java-info-action@main
    - name: Expose Parsed Elastic Version
      run: |
        echo "ELASTIC_VERSION=${{ steps.pom-info.outputs.x_elasticsearch8_test_version }}" >> "$GITHUB_ENV"
    - name: Start Cambpm
      if: ${{ matrix.requiresCambpm }}
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.cambpm.yml
        project_name: cambpm
      env:
        CAMBPM_VERSION: ${{ steps.pom-info.outputs.x_camunda_engine_version }}
        CAMBPM_JVM_MEMORY: 8
    - name: Start Elastic
      uses: ./.github/actions/compose
      with:
        compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.elasticsearch.yml
        project_name: elasticsearch
      env:
        ELASTIC_VERSION: ${{ env.ELASTIC_VERSION }}
        ELASTIC_JVM_MEMORY: 16
        ELASTIC_HTTP_PORT: 9200
    - name: Verify integration
      uses: ./.github/actions/run-maven
      env:
        LIMITS_CPU: 8
      with:
        threads: 8
        parameters: >
          verify -Dit.test.excludedGroups=${{ matrix.excludedGroups }}
          -Dit.test.includedGroups=${{ matrix.includedGroups }}
          -Dskip.docker -Dskip.fe.build -P${{ matrix.profiles }}
          -Dfailsafe.rerunFailingTestsCount=2
          -Ddatabase.type=elasticsearch -pl backend -am

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
      with:
        name: integration-test-elasticsearch-${{ matrix.includedGroups }}-junit
        path: |
          **/failsafe-reports/**/*.xml
        retention-days: 7
        if-no-files-found: ignore
    - name: Docker log dump
      uses: ./.github/actions/docker-logs
      if: always()
      with:
        archive_name: integration-tests-elasticsearch-${{ matrix.includedGroups }}-docker

  integration-tests-os:
    name: Integration Tests OpenSearch
    runs-on: gcp-core-32-default
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        includedGroups: [ 'ccsm-test', 'openSearchPassing' ]
        include:
          - includedGroups: 'openSearchPassing'
            excludedGroups: 'openSearchSingleTestFailOK,openSearchShouldBePassing'
            profiles: 'it,engine-latest'
            requiresCambpm: true
          - includedGroups: 'ccsm-test'
            excludedGroups: ''
            profiles: 'ccsm-it'
            requiresCambpm: false
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - name: Setup Maven
        uses: ./.github/actions/setup-maven
        with:
          secrets: ${{ toJSON(secrets) }}
      - name: Login to Harbor registry
        uses: ./.github/actions/login-registry
        with:
          secrets: ${{ toJSON(secrets) }}
      - name: "Read Java / Version Info"
        id: "pom-info"
        uses: YunaBraska/java-info-action@main
      - name: Expose Parsed OpenSearch Version
        run: echo "OPENSEARCH_VERSION=${{ steps.pom-info.outputs.x_opensearch_test_version }}" >> "$GITHUB_ENV"
      - name: Start Cambpm
        if: ${{ matrix.requiresCambpm }}
        uses: ./.github/actions/compose
        with:
          compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.cambpm.yml
          project_name: cambpm
        env:
          CAMBPM_VERSION: ${{ steps.pom-info.outputs.x_camunda_engine_version }}
          CAMBPM_JVM_MEMORY: 8
      - name: Start OpenSearch
        uses: ./.github/actions/compose
        with:
          compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.opensearch.yml
          project_name: opensearch
        env:
          OPENSEARCH_VERSION: ${{ env.OPENSEARCH_VERSION }}
          OPENSEARCH_JVM_MEMORY: 16
          OPENSEARCH_HTTP_PORT: 9205
      - name: Verify integration
        uses: ./.github/actions/run-maven
        env:
          LIMITS_CPU: 8
        with:
          threads: 8
          parameters: >
            verify -Dit.test.excludedGroups=${{ matrix.excludedGroups }}
            -Dit.test.includedGroups=${{ matrix.includedGroups }}
            -Dskip.docker -Dskip.fe.build -P${{ matrix.profiles }}
            -Dfailsafe.rerunFailingTestsCount=2
            -Ddatabase.type=opensearch -pl backend -am

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
        with:
          name: integration-test-opensearch-${{ matrix.includedGroups }}-junit
          path: |
            **/failsafe-reports/**/*.xml
          retention-days: 7
          if-no-files-found: ignore
      - name: Docker log dump
        uses: ./.github/actions/docker-logs
        if: always()
        with:
          archive_name: integration-tests-opensearch-${{ matrix.includedGroups }}-docker

  integration-tests-os-dev:
    name: Integration Tests OpenSearch Development
    runs-on: gcp-core-32-default
    # checks that the PR isn't closed AND check whether the labeled event contains 'opensearch' as substring || check whether on new commit of PR the label 'opensearch'' is part of label array
    if: github.event.pull_request.state != 'closed' && (contains( github.event.label.name, 'opensearch') || contains( github.event.pull_request.labels.*.name, 'opensearch'))
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        includedGroups: [ 'import,eventBasedProcess', 'reportEvaluation', '' ]
        include:
          - includedGroups: ''
            excludedGroups: 'ccsm-test,import,eventBasedProcess,reportEvaluation'
            profiles: 'it,engine-latest'
          - includedGroups: 'import,eventBasedProcess'
            excludedGroups: ''
            profiles: 'it,engine-latest'
          - includedGroups: 'reportEvaluation'
            excludedGroups: ''
            profiles: 'it,engine-latest'
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - name: Setup Maven
        uses: ./.github/actions/setup-maven
        with:
          secrets: ${{ toJSON(secrets) }}
      - name: Login to Harbor registry
        uses: ./.github/actions/login-registry
        with:
          secrets: ${{ toJSON(secrets) }}
      - name: "Read Java / Version Info"
        id: "pom-info"
        uses: YunaBraska/java-info-action@main
      - name: Expose Parsed OpenSearch Version
        run: echo "OPENSEARCH_VERSION=${{ steps.pom-info.outputs.x_opensearch_test_version }}" >> "$GITHUB_ENV"
      - name: Start Cambpm
        uses: ./.github/actions/compose
        with:
          compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.cambpm.yml
          project_name: cambpm
        env:
          CAMBPM_VERSION: ${{ steps.pom-info.outputs.x_camunda_engine_version }}
          CAMBPM_JVM_MEMORY: 8
      - name: Start OpenSearch
        uses: ./.github/actions/compose
        with:
          compose_file: ${{ github.workspace }}/.github/actions/compose/docker-compose.opensearch.yml
          project_name: opensearch
        env:
          OPENSEARCH_VERSION: ${{ env.OPENSEARCH_VERSION }}
          OPENSEARCH_JVM_MEMORY: 16
          OPENSEARCH_HTTP_PORT: 9205
      - name: Verify integration
        uses: ./.github/actions/run-maven
        env:
          LIMITS_CPU: 8
        with:
          threads: 8
          parameters: >
            verify -Dit.test.excludedGroups=${{ matrix.excludedGroups }}
            -Dit.test.includedGroups=${{ matrix.includedGroups }}
            -Dskip.docker -Dskip.fe.build -P${{ matrix.profiles }}
            -Dfailsafe.rerunFailingTestsCount=2
            -Ddatabase.type=opensearch -pl backend -am

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
        with:
          name: integration-test-opensearch-dev-${{ matrix.includedGroups }}-junit
          path: |
            **/failsafe-reports/**/*.xml
          retention-days: 7
          if-no-files-found: ignore
      - name: Docker log dump
        uses: ./.github/actions/docker-logs
        if: always()
        with:
          archive_name: integration-tests-opensearch-dev-${{ matrix.includedGroups }}-docker

  # Only deploy artifacts on push event, which in this case can only be triggered by master and maintenance
  deploy-artifacts:
    if: github.event_name == 'push' && (github.ref_name == 'master' || startsWith(github.ref_name, 'maintenance/'))
    name: Deploy Artifacts
    needs: [unit-tests, migration, data-upgrade-test, integration-tests]
    uses: ./.github/workflows/optimize-deploy-artifacts.yml
    secrets: inherit

  # Rerun failed jobs running on self-hosted runners in case of network issues or node preemption
  rerun-failed-jobs:
    needs:
      - migration
      - integration-tests
      - integration-tests-os
      - unit-tests
      - data-upgrade-test
      - deploy-artifacts
    if: failure() && fromJSON(github.run_attempt) < 3
    runs-on: ubuntu-latest
    steps:
      - name: Retrigger job
        uses: camunda/infra-global-github-actions/rerun-failed-run@main
        with:
          error-messages: |
            lost communication with the server
            The runner has received a shutdown signal
          run-id: ${{ github.run_id }}
          repository: ${{ github.repository }}
          vault-addr: ${{ secrets.VAULT_ADDR }}
          vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
          vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}
