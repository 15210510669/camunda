{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  extends: [
    "config:base",
    "docker:pinDigests",
    "helpers:pinGitHubActionDigests",
    ":disableRateLimiting",
    ":dependencyDashboard",
  ],
  separateMinorPatch: true,
  schedule: ["every weekday"],
  automergeType: "pr",
  // This ignores are the ones comming by default from config:base with exception to **/test/**
  // We do this to be able to test files in docker/test directory
  ignorePaths: [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/vendor/**",
    "**/examples/**",
    "**/__tests__/**",
    "**/tests/**",
    "**/__fixtures__/**",
  ],
  // Branches to be checked
  baseBranches: ["master", "/^maintenance\\/.*/"],
  // Here are credentials to private repos that renovate could not access by default
  hostRules: [
    {
      matchHost: "https://api.github.com/repos/camunda-cloud/",
      hostType: "github-tags",
      encrypted: {
        token: "wcFMA/xDdHCJBTolAQ//ZCDBjEcdT1ATZRSfzu3V7ot0bKFhzadLoUFd+bJ+F0Ylwv7b8kIEHZGpEy0qzz+fgmTeGq03JRHRu0jDgyJ394AzFHIav3j2AkPLpBWPQccQOCyjQ3poOn2wjwEEl5G+5jOCyswYoBvgNt+uaSutS7TKANgQXpuBAo0JCWxmjAKw1KvaOWNJTay7ec9ykBBaPH8iPlsrFRBupzjT+RT/CvjZNjQXrsq5monbkfPMyXlwDnlrffqiyxprOc9Z6heSSDMVEWqScJSUVBqlYNZZIYGHDN7MbDEwO4pcYKynzzotlZ6gjjA6gNY0ilMuxoP6wDHcH7L7YrV3pNMfl+QWX4SHs7EITAjI+WgM0O8zmWF4q8ILBXeFH0eLVTU4TgINJtyInIZ5eJht2oO8ZzmGM+t7bciIr1MY2dsOarwjkysX2ZtZ0aw5mEV2km9e52GScR8ZObf6VgaIDgasO9fPnybMqoWfzXLaGR5TSxNbS1B91Z7Cchxm2qWJAYdn7QpGNvjpVVxfROR4Sz7M35TgfGHRbFDnFpcIPcVdTqSb+BBiuL5J6SLEYDv6funibx75tommxPrGtcSF0y7ERf8mLO5h07xNLjFNXi5VeDStWDY/GeVJEdof6Lv0JN70TPILLWGrGJbEOdE7xwZZpE3iP5IZgqvRuogeik9qXdQLtqrSdgGNACmcEKkjG7j13R3KpubZFT/YX4LZWpTyYTBLjgP9+K7V3tsGQYGelKkX+1tg1jwEogC9koCAojTu5g8+8sGg8d7zNaHueP4gvcDsLC8cKxJ9Ood8COLHeE4/Cgg65QTSjogAQrf80x4Gr6TnV3rsh97DdsQ",
      },
    },
  ],
  // Global labels to be added to each PR
  labels: ["renovate", "dependencies"],
  // Global prefix for all generated commits
  commitMessagePrefix: "chore(deps):",
  // Global prefix for all generated branches
  branchPrefix: "renovate/",
  helmv3: {
    registryAliases: {
      "helm-camunda-io": "https://helm.camunda.io",
    },
  },
  packageRules: [
    // Frontend deps
    {
      addLabels: ["frontend"],
      languages: ["js"],
    },
    // Backend deps
    {
      addLabels: ["backend"],
      languages: ["java"],
    },
    // Infra deps
    {
      addLabels: ["infra"],
      managers: ["docker-compose", "dockerfile", "github-actions"],
    },
    // Docker deps
    {
      matchManagers: "dockerfile",
      separateMajorMinor: true,
      separateMinorPatch: true,
    },
    {
      matchDatasources: ["docker"],
      matchPackagePatterns: ["alpine", "docker.io/library/alpine"],
      groupName: "Alpine dependencies",
      separateMajorMinor: true,
      separateMinorPatch: true,
    },
    // Settings for patch versions update
    // We enable here the automerge, so if all tests pass the patch versions will be auto merged
    {
      addLabels: ["patch"],
      matchUpdateTypes: ["patch"],
      automerge: true,
    },
  ],
  regexManagers: [
    // These two regex managers are checking for alpine image versions in files other than Dockerfile
    {
      fileMatch: [
        ".github/scripts/build-docker-images.sh",
        ".ci/pipelines/release_optimize.groovy",
      ],
      matchStrings: [
        "export BASE_IMAGE=(?<depName>.*?):(?<currentValue>.*?)\\s",
      ],
      datasourceTemplate: "docker",
    },
    {
      fileMatch: [
        "docker/test/verify.sh",
        "docker/test/docker-labels.golden.json",
      ],
      matchStrings: [
        "(?<depName>docker.io/library/alpine):(?<currentValue>\\d+\\.\\d+\\.\\d+)",
      ],
      datasourceTemplate: "docker",
    },
  ],
}
