# This action packages the complete Zeebe distribution artifacts. This includes the Go client,
# zbctl, and the Zeebe distribution TAR ball. This excludes the Docker image. See the build-docker
# for that.

---
name: Build Zeebe
description: Builds & installs the complete Zeebe distribution

inputs:
  go:
    description: If false, will not build zbctl; defaults to true
    default: "true"
    required: false
  java:
    description: If false, will not build the Java distribution; defaults to true
    default: "true"
    required: false
  maven-extra-args:
    description: Additional CLI arguments which will be passed to the maven install command as is, e.g. "-am -pl util/"
    default: ""
    required: false

outputs:
  distball:
    description: "The path to the Zeebe distribution TAR ball"
    value: ${{ steps.build-java.outputs.result }}

runs:
  using: composite
  steps:
    - if: ${{ inputs.go == 'true' }}
      name: Build Go
      shell: bash
      id: build-go
      working-directory: clients/go/cmd/zbctl
      run: ./build.sh
    - if: ${{ inputs.java == 'true' }}
      name: Package Zeebe
      shell: bash
      id: build-java
      # we do not build in parallel to avoid memory and cache corruption issues, notably observed
      # on macOS and Windows
      env:
        # adds some additional Maven arguments; while the docs specify we should use MAVEN_ARGS with Maven 3.9, the Maven wrapper breaks this
        # and instead uses its own MAVEN_CONFIG environment variable
        #
        # -e ensures errors will also spit out a stack trace, which is always useful, and has no impact on normal builds
        # maven.wagon.* and maven.resolver.transport set the resolver's network transport to Wagon,
        # the old provider pre 3.9. Until Maven 3.9.2, we have to do this if we want to retry on
        # network issues, as otherwise any issue will fail the build.
        MAVEN_CONFIG: >
          -e
          -D maven.wagon.httpconnectionManager.ttlSeconds=120 -D maven.wagon.http.pool=false -Dmaven.resolver.transport=wagon
          -D maven.wagon.http.retryHandler.class=standard -D maven.wagon.http.retryHandler.requestSentEnabled=true
          -D maven.wagon.http.retryHandler.count=5
      run: |
        ./mvnw -B -DskipTests -DskipChecks install ${{ inputs.maven-extra-args }}
        export BUILD_DIR=$(./mvnw -pl dist/ help:evaluate -Dexpression=project.build.directory -q -DforceStdout)
        export ARTIFACT=$(./mvnw -pl dist/ help:evaluate -Dexpression=project.build.finalName -q -DforceStdout)
        echo "::set-output name=result::${BUILD_DIR}/${ARTIFACT}.tar.gz"
