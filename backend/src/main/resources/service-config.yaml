---
auth:
  token:
    #Optimize uses token-based authentication to keep track of which users are
    #logged in. Define when a token is supposed to expire.
    lifeMin: 15
container:
  # A host name or IP address, to identify a specific network interface on
  # which to listen.
  # NOTE: changing this property also requires adjustments in the startup script
  # start-optimize.sh on Linux or start-optimize.bat on Windows.
  host: localhost
  ports:
    #A port number that will be used by the embedded jetty server to process
    #HTTP connections.
    # NOTE: changing this property also requires adjustments in the startup script
    # start-optimize.sh on Linux or start-optimize.bat on Windows.
    http: 8090
    # A port number that will be used by the embedded jetty server to process
    # secure HTTPS connections.
    # NOTE: changing this property also requires adjustments in the startup script
    # start-optimize.sh on Linux or start-optimize.bat on Windows.
    https: 8091
  #HTTPS requires an SSL Certificate. When you generate an SSL Certificate,
  #you are creating a keystore file and a keystore password for use when the
  #browser interface connects
  keystore:
    location: keystore.jks
    password: optimize
  #configuration of status reporting web socket
  status:
    #max number of threads\sessions that will be kept to report status
    connections:
      max: 10
  checkMetadata: true
#Configuration for engines used to import data. Please note that you have to have atleast one
#engine configured at all times.
engines:
  #an alias of the engine, which will be used for internal purposes like
  #logging
  'camunda-bpm':
    #The name of the engine that will be used to import data.
    name: default
    #A base URL that will be used for connections to the Camunda Engine REST API.
    rest: http://localhost:8080/engine-rest
    authentication:
      #Toggles basic authentication on or off. When enabling basic
      #authentication, please be aware that you also need to adjust the values
      #of the user and password
      enabled: false
      #When basic authentication is enabled, this password is used to
      #authenticate against the engine.
      password: ''
      #When basic authentication is enabled, this user is used to authenticate
      #against the engine.
      user: ''
    #Check if engine should be considered connected. Disable only for testing!
    enabled: true
engine-commons:
  connection:
    #Maximum time without connection to the engine, Optimize should wait
    #until a time out is triggered.
    timeout: 10000
  hai:
    #The engine endpoint to the historic activity instance count.
    count: "/history/activity-instance/count"
    #The engine endpoint to the historic activity instances.
    resource: "/history/activity-instance"
  history:
    procinst:
      #The engine endpoint to the historic process instance count.
      count: "/history/process-instance/count"
      #The engine endpoint to the historic process instances.
      resource: "/history/process-instance"
    variable:
      #The engine endpoint to the historic variable instance count.
      count: "/history/variable-instance/count"
      #The engine endpoint to the historic variable instances.
      resource: "/history/variable-instance"
  procdef:
    #The engine endpoint to the process definition count.
    count: "/process-definition/count"
    #The engine endpoint to the process definition.
    resource: "/process-definition"
    #The engine endpoint to the process definition xml.
    xml: "/xml"
  read:
    #Maximum time a request to the engine should last,
    #before a timeout triggers.
    timeout: 15000
  user:
    validation:
      #The engine endpoint for the user validation.
      resource: "/identity/verify"
import:
  data:
    activity-instance:
      #Overwrites the maximum page size for historic activity instance
      #fetching.
      maxPageSize: 10000
      #The name of the event type.
      elasticsearchType: event
    process-definition:
      #Overwrites the minimum page size for process definitions fetching.
      maxPageSize: 1000
      #The name of the process definition type.
      elasticsearchType: process-definition
    process-definition-xml:
      #Overwrites the maximum page size for process definition xml model
      #fetching. Should be a low value, as large models will lead to
      #memory or timeout problems.
      maxPageSize: 2
      #The name of the process definition xml type.
      elasticsearchType: process-definition-xml
    process-instance:
      #Overwrites the maximum page size for historic process instance
      #fetching.
      maxPageSize: 1000
      #The name of the process instance (pi) tracking type that is used
      #to find piâ€™s that were already imported.
      finishedIdTrackingType: finished-process-instance-id-tracking
      unfinishedIdTrackingType: unfinished-process-instance-id-tracking
      #The name of the process instance type.
      elasticsearchType: process-instance
    variable:
      #Overwrites the maximum page size for historic variable instance
      #fetching.
      maxPageSize: 1000
      #The name of the variable type.
      elasticsearchType: variable
  # Number of threads being used to process the import jobs that are writing data to elasticsearch.
  elasticsearchJobExecutorThreadCount: 2
  #Adjust the queue size of the import jobs that store data to elasticsearch.
  #A too large value might cause memory problems.
  elasticsearchJobExecutorQueueSize: 100
  #The data is fetched from the engine in pages. Define
  #maximum size or, to be precise, a range for the number
  #of entities that should be fetched at once for each import type.
  maxPageSize: 1000
  handler:
    backoff:
      # Interval which is used for the backoff time calculation.
      interval: 5000
      # Once all pages are consumed, the import service component will
      # start scheduling fetching tasks in increasing periods of time,
      # controlled by "backoff" counter.
      max: 15
      # Tells if the backoff is enabled of not.
      isEnabled: true
  #The name of the import index type.
  indexType: import-index
  #The name of the id set based import index type
  scrollImportIndexType: scroll-import-index
  #States how often the import index should be stored to Elasticsearch.
  importIndexStorageIntervalInSec: 10
  writer:
    #Number of retries when there is a version conflict in Elasticsearch
    #during the import.
    numberOfRetries: 5
es:
  analyzer:
    #Defines the name of the analyzer.
    name: case_sensitive
    #Tokenfilter applied to every token.
    tokenfilter: standard
    #Tokenizer used to process tokens within a query.
    tokenizer: whitespace
  connection:
    #Maximum time without connection to Elasticsearch, Optimize should
    #wait until a time out triggers.
    timeout: 10000
  heatmap:
    duration:
      #The name of the duration target value type.
      targetValueType: duration-target-value
  # A hostname on which the Elasticsearch TCP listener is available.
  # NOTE: changing these properties also might need adjustments in the startup script
  # start-optimize.sh on Linux or start-optimize.bat on Windows if you don't have
  # configured your own elasticsearch instance.
  host: localhost
  # A port number used by Elasticsearch to accept TCP connections.
  # NOTE: changing these properties also might need adjustments in the startup script
  # start-optimize.sh on Linux or start-optimize.bat on Windows if you don't have
  # configured your own elasticsearch instance.
  port: 9300
  #An index name used to create all Camunda Optimize types, shards, etc.
  index: optimize
  licenseType: license
  reportType: report
  dashboardType: dashboard
  alertType: alert
  alertStatusType: alert-status
  reportShareType: report-share
  dashboardShareType: dashboard-share
  metaDataType: metadata
  sampler:
    #Connection sampler interval set to the client
    interval: 5000
  #Maximum time a request to elasticsearch should last, before a timeout
  #triggers.
  scrollTimeout: 60000
  settings:
    index:
      #How often should the data replicated in case of node failure.
      #Note, the more replicas you define, the slower Elasticsearch becomes.
      number_of_replicas: 0
      #How many shards should be used in the cluster.
      number_of_shards: 1
      #How long Elasticsearch waits until the documents are available
      #for search. A positive value defines the duration in seconds.
      #A value of -1 means that a refresh needs to be done manually.
      refresh_interval: 2s
  users:
    #The name of the user type.
    type: users
plugin:
  variableImport:
    #Look in the given base package list for variable import adaption plugins.
    #If empty, the import is not influenced.
    basePackages: []
serialization:
  #Define a custom date format that should be used
  #(should be the same as in the engine)
  #please not that engine prior to 7.8 use yyyy-MM-dd'T'HH:mm:ss as default date format
  engineDateFormat: yyyy-MM-dd'T'HH:mm:ss.SSSZ
  # the date format that is used in Optimize internally
  optimizeDateFormat: yyyy-MM-dd'T'HH:mm:ss.SSSZ
variable:
  #States the maximum number of values that are shown for the user in the
  #variable filter selection.                                            
  maxValueListSize: 15
alerting:
  quartz:
    jobStore: 'org.quartz.simpl.RAMJobStore'
  email:
    #A switch to control email sending process.
    enabled: false
    # Username of your smtp server
    username: ''
    # Corresponding password to the given user of your smtp server
    password: ''
    # Email address that can be used to send alerts
    address: ''
    # The smtp server name
    hostname: ''
    # The smtp server port. This one is also used as SSL port for the security connection.
    port: 587
    # States how the connection to the server should be secured.
    # Possible values are 'NONE', 'STARTTLS' or 'SSL/TLS'
    securityProtocol: 'NONE'
export:
  csv:
    # Maximum number of records returned by CSV export
    limit: 1000
    # Position of first record which will be exported in CSV
    offset: 0
camunda:
  # The webapps configuration allows Optimize to directly link
  # to the other Camunda Web Applications, e.g. to jump from
  # Optimize directly to a dedicated process instance in Cockpit
  webapps:
    # Defines the endpoint where to find the camunda webapps
    endpoint: "http://localhost:8080/camunda/"
    # Enables/disables linking to other Camunda Web Applications
    enabled: true