<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.camunda</groupId>
    <artifactId>zeebe-parent</artifactId>
    <version>8.5.0-SNAPSHOT</version>
    <relativePath>../parent/pom.xml</relativePath>
  </parent>
  <artifactId>operate-parent</artifactId>
  <packaging>pom</packaging>

  <name>Operate Parent</name>

  <organization>
    <name>Camunda Services GmbH</name>
    <url>http://www.camunda.com</url>
  </organization>

  <modules>
    <module>client</module>
    <module>common</module>
    <module>schema</module>
    <module>data-generator</module>
    <module>importer-common</module>
    <module>importer-8_4</module>
    <module>importer-8_5</module>
    <module>importer</module>
    <module>archiver</module>
    <module>webapp</module>
    <module>qa</module>
    <module>mvc-auth-commons</module>
    <module>../distro</module>
  </modules>

  <issueManagement>
    <system>Jira</system>
    <url>https://app.camunda.com/jira/browse/OPE/</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>camunda-nexus</id>
      <url>https://artifacts.camunda.com/artifactory/camunda-operate/</url>
    </repository>
    <snapshotRepository>
      <id>camunda-nexus</id>
      <url>https://artifacts.camunda.com/artifactory/camunda-operate-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <!-- when updating this version, also change it in .idea/externalDependencies.xml -->
    <plugin.version.google-java-format>1.19.2</plugin.version.google-java-format>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <maven.compiler.target>17</maven.compiler.target>
    <maven.compiler.source>17</maven.compiler.source>

    <skip.fe.build>false</skip.fe.build>

    <plugin.version.license>4.3</plugin.version.license>
    <license.header>${project.basedir}/../license/license-header</license.header>

    <includeITNames>**/*IT.java</includeITNames>
    <excludeITNames>**/*5IT.java</excludeITNames>
    <skipSurefire>false</skipSurefire>
    <failsafeForkCount>${env.LIMITS_CPU}</failsafeForkCount>
  </properties>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>4.4</version>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${version.log4j.testjar}</version>
        <type>test-jar</type>
      </dependency>

      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${version.springdoc}</version>
      </dependency>

      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-common</artifactId>
        <version>${version.springdoc}</version>
      </dependency>

      <dependency>
        <groupId>org.keycloak</groupId>
        <artifactId>keycloak-admin-client</artifactId>
        <version>${keycloak-client.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <repositories>
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>zeebe</id>
      <name>Zeebe Repository</name>
      <url>https://artifacts.camunda.com/artifactory/zeebe-io/</url>
    </repository>

    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>zeebe-snapshots</id>
      <name>Zeebe Snapshot Repository</name>
      <url>https://artifacts.camunda.com/artifactory/zeebe-io-snapshots/</url>
    </repository>

    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>camunda-identity-snapshot</id>
      <name>Camunda Identity Snapshot Repository</name>
      <url>https://artifacts.camunda.com/artifactory/camunda-identity-snapshots/</url>
    </repository>

    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>camunda-identity-services</id>
      <name>Camunda Identity Repository</name>
      <url>https://artifacts.camunda.com/artifactory/camunda-identity/</url>
    </repository>

    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>elasticsearch</id>
      <name>Elasticsearch Repository</name>
      <url>https://artifacts.elastic.co/maven/</url>
    </repository>

  </repositories>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.12.1</version>
          <configuration>
            <forceJavacCompilerUse>true</forceJavacCompilerUse>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>

        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>1.15.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>appassembler-maven-plugin</artifactId>
          <version>2.1.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.6.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.5.0</version>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
        </plugin>

        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>1.6.13</version>
          <extensions>true</extensions>
          <configuration>
            <detectBuildFailures>true</detectBuildFailures>
            <serverId>camunda-nexus</serverId>
            <nexusUrl>https://artifacts.camunda.com/artifactory/</nexusUrl>
            <skipStaging>true</skipStaging>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.6.3</version>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.2.5</version>
          <configuration>
            <skip>${skipSurefire}</skip>
            <forkCount>${failsafeForkCount}</forkCount>
            <reuseForks>true</reuseForks>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <systemPropertyVariables>
              <testForkNumber>$${surefire.forkNumber}</testForkNumber>
            </systemPropertyVariables>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.2.5</version>
          <configuration>
            <includes>
              <include>${includeITNames}</include>
            </includes>
            <excludes>
              <exclude>${excludeITNames}</exclude>
            </excludes>
            <forkCount>${failsafeForkCount}</forkCount>
            <reuseForks>true</reuseForks>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <systemPropertyVariables>
              <testForkNumber>$${surefire.forkNumber}</testForkNumber>
            </systemPropertyVariables>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
          <configuration>
            <nonFilteredFileExtensions>
              <nonFilteredFileExtension>p12</nonFilteredFileExtension>
              <nonFilteredFileExtension>crt</nonFilteredFileExtension>
              <nonFilteredFileExtension>pem</nonFilteredFileExtension>
            </nonFilteredFileExtensions>
          </configuration>
        </plugin>

        <!-- LICENSE PLUGIN -->
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${plugin.version.license}</version>
          <configuration>
            <header>${license.header}</header>
            <includes>
              <include>**/*.java</include>
            </includes>
            <mapping>
              <java>SLASHSTAR_STYLE</java>
            </mapping>
          </configuration>
          <executions>
            <execution>
              <id>add-license</id>
              <goals>
                <goal>format</goal>
              </goals>
              <phase>compile</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.5.1</version>
        </plugin>

        <!-- Google code format plugin -->
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.43.0</version>
          <configuration>
            <java>
              <googleJavaFormat>
                <version>${plugin.version.google-java-format}</version>
                <style>GOOGLE</style>
              </googleJavaFormat>
            </java>
            <!-- While other files are generally placed in a special directory, markdown files are not.
      To make sure all markdown files are formatted, we need to rely on the **/*.md pattern.
      This pattern will match all *.md files in all subdirectories (also in all submodules).-->
            <markdown>
              <includes>
                <include>**/*.md</include>
              </includes>
              <excludes>
                <exclude>**/target/**/*.md</exclude>
                <exclude>**/node_modules/**/*.md</exclude>
              </excludes>
              <flexmark></flexmark>
            </markdown>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.google.googlejavaformat</groupId>
              <artifactId>google-java-format</artifactId>
              <version>${plugin.version.google-java-format}</version>
            </dependency>
          </dependencies>
        </plugin>

        <!-- CHECKSTYLE -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${plugin.version.checkstyle}</version>
          <configuration>
            <configLocation>check/.checkstyle.xml</configLocation>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <failOnViolation>true</failOnViolation>
            <sourceDirectories>
              <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
              <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
            </sourceDirectories>
          </configuration>
          <!-- dependency on build tool to reference the checkstyle cfg -->
          <dependencies>
            <dependency>
              <groupId>io.camunda</groupId>
              <artifactId>zeebe-build-tools</artifactId>
              <version>${version.zeebe}</version>
            </dependency>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${version.checkstyle}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>validate-java</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>validate</phase>
              <configuration></configuration>
            </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>itStage1</id>
      <properties>
        <includeITNames>**/*IT.java</includeITNames>
        <excludeITNames>**/*ZeebeIT.java</excludeITNames>
        <failsafeForkCount>1</failsafeForkCount>
      </properties>
    </profile>

    <profile>
      <id>itStage2</id>
      <properties>
        <includeITNames>**/*ZeebeIT.java</includeITNames>
        <excludeITNames>none</excludeITNames>
        <failsafeForkCount>${env.LIMITS_CPU}</failsafeForkCount>
        <skipSurefire>true</skipSurefire>
      </properties>
    </profile>

    <!-- profile to auto format -->
    <profile>
      <id>autoFormat</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-format</id>
                <goals>
                  <goal>apply</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- profile to perform strict validation checks -->
    <profile>
      <id>checkFormat</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>validate</phase>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
