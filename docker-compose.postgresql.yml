version: '2.4'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:${ES_VERSION:-6.0.0}
    container_name: elasticsearch
    environment:
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - action.auto_create_index=false
      - path.logs=/usr/share/elasticsearch/logs
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - "./backend/target/es_logs:/usr/share/elasticsearch/logs"
      - "./backend/src/it/resources/es_conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
      - "./backend/src/it/resources/es_conf/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties"
    restart: always
    cpu_count: 2
    mem_limit: 2g
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cat/health | grep -q green"]
      interval: 30s
      timeout: 5s
      retries: 3
  cambpm:
    image: registry.camunda.cloud/camunda-bpm-platform-ee:${CAMBPM_VERSION:-7.10.0-alpha1}
    container_name: cambpm
    environment:
      - DB_DRIVER=org.postgresql.Driver
      - DB_USERNAME=camunda
      - DB_PASSWORD=camunda
      - DB_URL=jdbc:postgresql://postgres:5432/engine
      - TZ=Europe/Berlin
      - WAIT_FOR=postgres:5432
    ports:
      - 8080:8080
    volumes:
      - "./backend/target/cambpm_logs:/camunda/logs"
      - "./backend/src/it/resources/tomcat/setenv.sh:/camunda/bin/setenv.sh"
      - "./backend/src/it/resources/tomcat/bpm-platform.postgresql.xml:/camunda/conf/bpm-platform.xml"
      - "./backend/src/it/resources/tomcat/tomcat-users.xml:/camunda/conf/tomcat-users.xml"
      - "./backend/src/it/resources/tomcat/context.xml:/camunda/webapps/manager/META-INF/context.xml"
    restart: always
    cpu_count: 1
    mem_limit: 2g
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O- http://localhost:8080/engine-rest/engine | grep -q default"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      - postgres
  postgres:
    image: postgres:9.6-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=camunda
      - POSTGRES_PASSWORD=camunda
      - POSTGRES_DB=engine
      - TZ=Europe/Berlin
    ports:
      - 5432:5432
    restart: always
    cpu_count: 1
    mem_limit: 1g
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=$${POSTGRES_PASSWORD} psql --username=$${POSTGRES_USER} --host=localhost --dbname=$${POSTGRES_DB} --command='\\q'"]
      interval: 30s
      timeout: 5s
      retries: 3

