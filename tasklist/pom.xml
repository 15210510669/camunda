<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>Tasklist Parent</name>
  <groupId>io.camunda</groupId>
  <artifactId>tasklist-parent</artifactId>
  <version>8.6.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>client</module>
    <module>common</module>
    <module>els-schema</module>
    <module>data-generator</module>
    <module>importer-common</module>
    <module>importer-850</module>
    <module>importer-860</module>
    <module>importer</module>
    <module>archiver</module>
    <module>webapp</module>
    <module>qa</module>
    <module>../tasklist-distro</module>
    <module>mvc-auth-commons</module>
    <module>test-coverage</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <version.zeebe>8.5.0</version.zeebe>
    <version.identity>8.5.0</version.identity>
    <version.elasticsearch>7.17.19</version.elasticsearch>
    <version.elasticsearch-client>8.10.4</version.elasticsearch-client>
    <version.opensearch>2.8.0</version.opensearch>
    <version.spring.boot>3.2.4</version.spring.boot>
    <version.log4j>2.19.0</version.log4j>
    <version.junit>5.9.3</version.junit>
    <version.jakarta.json>2.0.1</version.jakarta.json>
    <version.micrometer>1.12.2</version.micrometer>
    <version.mockito>5.0.0</version.mockito>
    <version.byte.buddy>1.14.11</version.byte.buddy>
    <version.assertj-core>3.25.3</version.assertj-core>
    <version.jackson>2.16.1</version.jackson>
    <version.graphql>15.1.0</version.graphql>
    <version.graphql.tools>13.1.1</version.graphql.tools>
    <version.graphql-java>21.3</version.graphql-java>
    <version.graphql-java.scalars>21.0</version.graphql-java.scalars>
    <version.snakeyaml>2.2</version.snakeyaml>
    <version.commons-text>1.11.0</version.commons-text>
    <version.failsafe>2.4.4</version.failsafe>
    <version.guava>33.0.0-jre</version.guava>
    <version.apache.httpclient5>5.3.1</version.apache.httpclient5>
    <version.aws-sdk>2.24.3</version.aws-sdk>

    <version.node>v20.12.2</version.node>
    <version.yarn>v1.22.21</version.yarn>

    <zeebe-test-container.version>3.6.3</zeebe-test-container.version>
    <elasticsearch-test-container.version>1.19.4</elasticsearch-test-container.version>
    <opensearch-testcontainers.version>2.0.1</opensearch-testcontainers.version>
    <postgres-test-container.version>1.19.4</postgres-test-container.version>
    <testcontainers.version>1.19.4</testcontainers.version>
    <keycloak-client.version>23.0.6</keycloak-client.version>

    <maven.compiler.target>17</maven.compiler.target>
    <maven.compiler.source>17</maven.compiler.source>

    <skip.fe.build>false</skip.fe.build>

    <plugin.version.license>4.3</plugin.version.license>
    <version.checkstyle>10.13.0</version.checkstyle>
    <plugin.version.checkstyle>3.3.1</plugin.version.checkstyle>
    <!-- when updating this version, also change it in .idea/externalDependencies.xml -->
    <plugin.version.google-java-format>1.19.2</plugin.version.google-java-format>

    <license.header>${project.baseUri}/../../license/license-header</license.header>

    <!-- Auth0 Dependencies -->
    <!-- If any of the following version changes, -->
    <!-- please check if they are compatible with "mvc-auth-commons" -->
    <version.auth0>1.45.1</version.auth0>
    <version.auth0.commons>1.11.0</version.auth0.commons>
    <version.auth0.jwt>4.4.0</version.auth0.jwt>
    <version.jakarta.servlet>6.0.0</version.jakarta.servlet>
    <version.jwks-rsa>0.22.1</version.jwks-rsa>
    <version.commons.lang>3.14.0</version.commons.lang>
    <version.guava.annotations>r03</version.guava.annotations>
    <version.commons.codec>1.16.0</version.commons.codec>
    <version.swagger.annotations>2.2.20</version.swagger.annotations>
  </properties>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${version.guava}</version>
      </dependency>

      <dependency>
        <!-- Import dependency management from Spring Boot -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${version.spring.boot}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-bom</artifactId>
        <version>${version.zeebe}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.squareup.okio</groupId>
        <artifactId>okio</artifactId>
        <version>3.8.0</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.okio</groupId>
        <artifactId>okio-jvm</artifactId>
        <version>3.8.0</version>
      </dependency>
      <dependency>
        <groupId>com.nimbusds</groupId>
        <artifactId>nimbus-jose-jwt</artifactId>
        <version>9.37.2</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.parsson</groupId>
        <artifactId>parsson</artifactId>
        <version>1.1.5</version>
        <scope>compile</scope>
        <exclusions>
          <exclusion>
            <artifactId>third-party-jackson-core</artifactId>
            <groupId>software.amazon.awssdk</groupId>
          </exclusion>
        </exclusions>
      </dependency>


      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>identity-spring-boot-starter</artifactId>
        <version>${version.identity}</version>
      </dependency>

      <!-- Elasticsearch  -->
      <dependency>
        <groupId>org.elasticsearch.client</groupId>
        <artifactId>elasticsearch-rest-high-level-client</artifactId>
        <version>${version.elasticsearch}</version>
      </dependency>

      <dependency>
        <groupId>co.elastic.clients</groupId>
        <artifactId>elasticsearch-java</artifactId>
        <version>${version.elasticsearch-client}</version>
      </dependency>

      <!-- Opensearch  -->
      <dependency>
        <groupId>org.opensearch.client</groupId>
        <artifactId>opensearch-java</artifactId>
        <version>${version.opensearch}</version>
      </dependency>

      <dependency>
        <groupId>org.opensearch.client</groupId>
        <artifactId>opensearch-rest-client</artifactId>
        <version>${version.opensearch}</version>
      </dependency>

      <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>20231013</version>
      </dependency>

      <!-- End Opensearch  -->

      <!-- START have to define this to override wrong version coming from spring-boot-dependencies BOM -->
      <dependency>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch</artifactId>
        <version>${version.elasticsearch}</version>
        <exclusions>
          <exclusion>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.elasticsearch.client</groupId>
        <artifactId>elasticsearch-rest-client</artifactId>
        <version>${version.elasticsearch}</version>
      </dependency>
      <!-- END -->

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${version.log4j}</version>
        <type>test-jar</type>
      </dependency>

      <dependency>
        <groupId>org.glassfish</groupId>
        <artifactId>jakarta.json</artifactId>
        <version>${version.jakarta.json}</version>
      </dependency>

      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${version.junit}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${version.junit}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>io.zeebe</groupId>
        <artifactId>zeebe-test-container</artifactId>
        <version>${zeebe-test-container.version}</version>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>elasticsearch</artifactId>
        <version>${elasticsearch-test-container.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opensearch</groupId>
        <artifactId>opensearch-testcontainers</artifactId>
        <version>${opensearch-testcontainers.version}</version>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgres-test-container.version}</version>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers</artifactId>
        <version>${testcontainers.version}</version>
      </dependency>
      <dependency>
        <groupId>org.keycloak</groupId>
        <artifactId>keycloak-admin-client</artifactId>
        <version>${keycloak-client.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${version.jackson}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${version.jackson}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${version.jackson}</version>
      </dependency>

      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-registry-prometheus</artifactId>
        <version>${version.micrometer}</version>
      </dependency>

      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-core</artifactId>
        <version>${version.micrometer}</version>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${version.mockito}</version>
      </dependency>

      <dependency>
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy</artifactId>
        <version>${version.byte.buddy}</version>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${version.assertj-core}</version>
      </dependency>

      <dependency>
        <groupId>com.graphql-java-kickstart</groupId>
        <artifactId>graphql-spring-boot-starter</artifactId>
        <version>${version.graphql}</version>
      </dependency>

      <dependency>
        <groupId>com.graphql-java-kickstart</groupId>
        <artifactId>graphql-spring-boot-starter-test</artifactId>
        <version>${version.graphql}</version>
      </dependency>

      <dependency>
        <groupId>com.graphql-java-kickstart</groupId>
        <artifactId>graphql-java-tools</artifactId>
        <version>${version.graphql.tools}</version>
      </dependency>

      <dependency>
        <groupId>com.graphql-java</groupId>
        <artifactId>graphql-java</artifactId>
        <version>${version.graphql-java}</version>
      </dependency>

      <dependency>
        <groupId>com.graphql-java</groupId>
        <artifactId>graphql-java-extended-scalars</artifactId>
        <version>${version.graphql-java.scalars}</version>
      </dependency>

      <dependency>
        <groupId>net.jodah</groupId>
        <artifactId>failsafe</artifactId>
        <version>${version.failsafe}</version>
      </dependency>

      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${version.snakeyaml}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>${version.commons-text}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents.client5</groupId>
        <artifactId>httpclient5</artifactId>
        <version>${version.apache.httpclient5}</version>
      </dependency>

      <!-- Auth0 and it's direct dependencies -->
      <dependency>
        <groupId>com.auth0</groupId>
        <artifactId>mvc-auth-commons</artifactId>
        <version>${version.auth0.commons}</version>
      </dependency>

      <dependency>
        <groupId>com.auth0</groupId>
        <artifactId>auth0</artifactId>
        <version>${version.auth0}</version>
      </dependency>

      <dependency>
        <groupId>com.auth0</groupId>
        <artifactId>java-jwt</artifactId>
        <version>${version.auth0.jwt}</version>
      </dependency>

      <dependency>
        <groupId>com.auth0</groupId>
        <artifactId>jwks-rsa</artifactId>
        <version>${version.jwks-rsa}</version>
      </dependency>

      <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
        <version>${version.jakarta.servlet}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${version.commons.lang}</version>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava-annotations</artifactId>
        <version>${version.guava.annotations}</version>
      </dependency>

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${version.commons.codec}</version>
      </dependency>

      <!-- Start AWS -->
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>auth</artifactId>
        <version>${version.aws-sdk}</version>
      </dependency>

      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-sts</artifactId>
        <version>1.12.652</version>
      </dependency>

      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>sts</artifactId>
        <version>${version.aws-sdk}</version>
      </dependency>

      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>netty-nio-client</artifactId>
        <version>${version.aws-sdk}</version>
      </dependency>

      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${version.swagger.annotations}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.12.1</version>
          <configuration>
            <forceJavacCompilerUse>true</forceJavacCompilerUse>
            <parameters>true</parameters>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>

        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>1.12.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>appassembler-maven-plugin</artifactId>
          <version>2.1.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.6.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.5.0</version>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${version.spring.boot}</version>
        </plugin>

        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>1.6.13</version>
          <extensions>true</extensions>
          <configuration>
            <detectBuildFailures>true</detectBuildFailures>
            <serverId>camunda-nexus</serverId>
            <nexusUrl>https://artifacts.camunda.com/artifactory/</nexusUrl>
            <skipStaging>true</skipStaging>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.6.3</version>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.2.5</version>
          <configuration>
            <forkCount>${env.LIMITS_CPU}</forkCount>
            <reuseForks>true</reuseForks>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <systemPropertyVariables>
              <testForkNumber>$${surefire.forkNumber}</testForkNumber>
            </systemPropertyVariables>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.2.5</version>
          <configuration>
            <forkCount>${env.LIMITS_CPU}</forkCount>
            <reuseForks>true</reuseForks>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <systemPropertyVariables>
              <testForkNumber>$${surefire.forkNumber}</testForkNumber>
            </systemPropertyVariables>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
          <configuration>
            <nonFilteredFileExtensions>
              <nonFilteredFileExtension>p12</nonFilteredFileExtension>
              <nonFilteredFileExtension>crt</nonFilteredFileExtension>
              <nonFilteredFileExtension>pem</nonFilteredFileExtension>
            </nonFilteredFileExtensions>
          </configuration>
        </plugin>

        <!-- LICENSE PLUGIN -->
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${plugin.version.license}</version>
          <configuration>
            <header>${license.header}</header>
            <includes>
              <include>**/*.java</include>
            </includes>
            <mapping>
              <java>SLASHSTAR_STYLE</java>
            </mapping>
          </configuration>
          <executions>
            <execution>
              <id>add-license</id>
              <phase>compile</phase>
              <goals>
                <goal>format</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.5.1</version>
        </plugin>

        <!-- CHECKSTYLE -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${plugin.version.checkstyle}</version>
          <configuration>
            <configLocation>check/.checkstyle.xml</configLocation>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <encoding>UTF-8</encoding>
            <failOnViolation>true</failOnViolation>
            <sourceDirectories>
              <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
              <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
            </sourceDirectories>
            <excludes>**/GetCustomSnapshotResponse.java</excludes>
          </configuration>
          <!-- dependency on build tool to reference the checkstyle cfg -->
          <dependencies>
            <dependency>
              <groupId>io.camunda</groupId>
              <artifactId>zeebe-build-tools</artifactId>
              <version>${version.zeebe}</version>
            </dependency>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${version.checkstyle}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>validate-java</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>validate</phase>
              <configuration />
            </execution>
          </executions>
        </plugin>

        <!-- Google code format plugin -->
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.43.0</version>
          <configuration>
            <java>
              <googleJavaFormat>
                <version>${plugin.version.google-java-format}</version>
                <style>GOOGLE</style>
              </googleJavaFormat>
            </java>
            <!-- While other files are generally placed in a special directory, markdown
              files are not. To make sure all markdown files are formatted, we need to
              rely on the **/*.md pattern. This pattern will match all *.md files in all
              subdirectories (also in all submodules). -->
            <markdown>
              <includes>
                <include>**/*.md</include>
              </includes>
              <excludes>
                <exclude>**/target/**/*.md</exclude>
                <exclude>**/node_modules/**/*.md</exclude>
                <exclude>**/client/**/*.md</exclude>
              </excludes>
              <flexmark />
            </markdown>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.google.googlejavaformat</groupId>
              <artifactId>google-java-format</artifactId>
              <version>${plugin.version.google-java-format}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.11</version>
        </plugin>
      </plugins>

    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>enforce</id>
            <configuration>
              <rules>
                <requirePluginVersion />
                <banDuplicatePomDependencyVersions />
              </rules>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <!--exclusions for `tasklist-common` module-->
            <exclude>**/camunda/tasklist/entities/**/*</exclude>
            <exclude>**/camunda/tasklist/exceptions/**/*</exclude>
            <exclude>**/camunda/tasklist/property/**/*</exclude>
            <!--exclusions for `tasklist-webapp` module-->
            <exclude>**/camunda/tasklist/webapp/api/rest/v1/entities/**/*</exclude>
            <exclude>**/camunda/tasklist/webapp/management/dto/**/*</exclude>
            <exclude>**/camunda/tasklist/webapp/graphql/entity/**/*</exclude>
            <exclude>**/camunda/tasklist/webapp/rest/exception/**/*</exclude>
            <exclude>**/camunda/tasklist/webapp/config/**/*</exclude>
            <exclude>**/camunda/tasklist/webapp/es/dao/response/**/*</exclude>
            <exclude>**/camunda/tasklist/webapp/**/*ErrorController.*</exclude>
            <exclude>**/camunda/tasklist/webapp/**/ClusterMetadata.*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>

    <!-- profile to auto format -->
    <profile>
      <id>autoFormat</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-format</id>
                <goals>
                  <goal>apply</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>


    <!-- profile to perform strict validation checks -->
    <profile>
      <id>checkFormat</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>validate</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

  <distributionManagement>
    <snapshotRepository>
      <id>camunda-nexus</id>
      <url>https://artifacts.camunda.com/artifactory/camunda-zeebe-tasklist-snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>camunda-nexus</id>
      <url>https://artifacts.camunda.com/artifactory/camunda-zeebe-tasklist/</url>
    </repository>
  </distributionManagement>

  <scm>
    <url>https://github.com/camunda/tasklist</url>
    <connection>scm:git:https://${env.GITHUB_USERNAME}:${env.GITHUB_TOKEN}@github.com/camunda/tasklist.git</connection>
    <developerConnection>scm:git:https://${env.GITHUB_USERNAME}:${env.GITHUB_TOKEN}@github.com/camunda/tasklist.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>Git</system>
    <url>https://github.com/camunda/tasklist/issues</url>
  </issueManagement>

  <organization>
    <name>Camunda Services GmbH</name>
    <url>http://www.camunda.com</url>
  </organization>

  <repositories>
    <repository>
      <id>zeebe</id>
      <name>Zeebe Repository</name>
      <url>https://artifacts.camunda.com/artifactory/zeebe-io/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>camunda-shared-services-snapshot</id>
      <name>Shared services Snapshot Repository</name>
      <url>https://artifacts.camunda.com/artifactory/camunda-shared-services-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>camunda-shared-services</id>
      <name>Shared services Repository</name>
      <url>https://artifacts.camunda.com/artifactory/camunda-shared-services/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>zeebe-snapshots</id>
      <name>Zeebe Snapshot Repository</name>
      <url>https://artifacts.camunda.com/artifactory/zeebe-io-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>camunda-identity</id>
      <name>camunda identity Repository</name>
      <url>https://artifacts.camunda.com/artifactory/camunda-identity/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>camunda-identity-snapshot</id>
      <name>camunda identity Snapshot Repository</name>
      <url>https://artifacts.camunda.com/artifactory/camunda-identity-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>elasticsearch</id>
      <name>Elasticsearch Repository</name>
      <url>https://artifacts.elastic.co/maven/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

  </repositories>

</project>
