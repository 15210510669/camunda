---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: optimize-persistent-camunda-cloud
  namespace: optimize-persistent
  labels:
    app: optimize-persistent
    team: optimize
    camunda.cloud/managed-by: ci
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: optimize-persistent
  template:
    metadata:
      labels:
        app: optimize-persistent
        camunda.cloud/managed-by: ci
    spec:
      imagePullSecrets:
      - name: registry-camunda-cloud
      volumes:
      - name: configuration
        configMap:
          name: optimize-persistent-config
          defaultMode: 0555
      initContainers:
      - name: migration
        image: registry.camunda.cloud/optimize-ee/optimize:3.5.0-RC3
        command: ['./upgrade/upgrade.sh', '--skip-warning']
        volumeMounts:
          - name: configuration
            mountPath: /optimize/config/environment-config.yaml
            subPath: environment-config.yaml
      containers:
      - name: optimize
        image: registry.camunda.cloud/optimize-ee/optimize:3.5.0-RC3
        imagePullPolicy: Always
        env:
        - name: OPTIMIZE_JAVA_OPTS
          value: |
            -Xms2g
            -Xmx2g
            -XX:MaxMetaspaceSize=256m
        - name: WAIT_FOR
          value: "elasticsearch-es-http:9200"
        - name: WAIT_FOR_TIMEOUT
          value: "60"
        ports:
        - containerPort: 8090
          name: optimize-http
        tty: true
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 30
          httpGet:
            path: /
            port: optimize-http
        readinessProbe:
          initialDelaySeconds: 60
          periodSeconds: 30
          httpGet:
            path: /api/readyz
            port: optimize-http
        resources:
          limits:
            cpu: 4
            memory: 3Gi
          requests:
            cpu: 4
            memory: 3Gi
        volumeMounts:
        - name: configuration
          mountPath: /optimize/config/environment-config.yaml
          subPath: environment-config.yaml
        - name: configuration
          mountPath: /optimize/config/OptimizeLicense.txt
          subPath: OptimizeLicense.txt
      - name: cambpm
        image: registry.camunda.cloud/cambpm-ee/camunda-bpm-platform-ee:7.14.0
        imagePullPolicy: Always
        command: ["/camunda/configure-and-run.sh"]
        env:
        - name: JAVA_OPTS
          value: "-Xms1g -Xmx1g -XX:MaxMetaspaceSize=256m -Ddb.username=$DB_USERNAME -Ddb.password=$DB_PASSWORD"
        - name: SKIP_DB_CONFIG
          value: "true"
        - name: WAIT_FOR
          value: optimize-persistent-postgres.optimize-persistent:5432
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: cambpm-db-secrets
              key: db-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cambpm-db-secrets
              key: db-password
        ports:
        - containerPort: 8080
          name: cambpm-http
        tty: true
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          httpGet:
            path: /engine-rest/engine
            port: cambpm-http
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          httpGet:
            path: /engine-rest/engine
            port: cambpm-http
        resources:
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 2
            memory: 2Gi
        volumeMounts:
        - name: configuration
          mountPath: /camunda/conf/bpm-platform.xml
          subPath: bpm-platform.xml
        - name: configuration
          mountPath: /camunda/conf/server.xml
          subPath: server.xml
        - name: configuration
          mountPath: /camunda/configure-and-run.sh
          subPath: configure-and-run.sh
