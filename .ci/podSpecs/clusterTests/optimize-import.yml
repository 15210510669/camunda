apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-optimize-import-camunda-cloud
  namespace: ${NAMESPACE}
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: optimize-import
  template:
    metadata:
      labels:
        app: optimize-import
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: slaves
      tolerations:
        - key: "slaves"
          operator: "Exists"
          effect: "NoSchedule"
      volumes:
        - name: configuration
          configMap:
            name: cluster-optimize-import-camunda-cloud
            defaultMode: 0744
      containers:
        - name: optimize-import
          image: gcr.io/ci-30-162810/camunda-optimize:latest
          imagePullPolicy: Always
          env:
            - name: JAVA_OPTS
              value: |
                -Xmx1000m
                -XX:MaxMetaspaceSize=128m
          ports:
            - containerPort: 8090
              name: optimize-http
              protocol: TCP
          tty: true
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 30
            httpGet:
              path: /api/meta/version
              port: optimize-http
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 30
            httpGet:
              path: /api/meta/version
              port: optimize-http
          resources:
            limits:
              cpu: 4
              memory: 2Gi
            requests:
              cpu: 2
              memory: 2Gi
          volumeMounts:
            - name: configuration
              mountPath: /optimize/environment/environment-config.yaml
              subPath: environment-config.yaml
            - name: configuration
              mountPath: /optimize/environment/OptimizeLicense.txt
              subPath: OptimizeLicense.txt
