---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "@BRANCH@-optimize-camunda-cloud"
  labels:
    app: "@BRANCH@-optimize-camunda-cloud"
    branch: "@BRANCH@"
    changed: "@CHANGED@"
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: "@BRANCH@-optimize-camunda-cloud"
  template:
    metadata:
      labels:
        app: "@BRANCH@-optimize-camunda-cloud"
        branch: "@BRANCH@"
        changed: "@CHANGED@"
    spec:
      imagePullSecrets:
      - name: registry-camunda-cloud
      nodeSelector:
        cloud.google.com/gke-nodepool: services
      volumes:
      - name: config
        configMap:
          name: "@BRANCH@-optimize-camunda-cloud"
          defaultMode: 0755
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
################################################################################
      - name: optimize
        image: "gcr.io/ci-30-162810/camunda-optimize:@VERSION@"
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTS
          value: "-Xms1g -Xmx1g -XX:MaxMetaspaceSize=256m"
        - name: WAIT_FOR
          value: "localhost:9300"
        - name: WAIT_FOR_TIMEOUT
          value: "60"
        ports:
        - containerPort: 8090
          name: optimize-http
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 30
          httpGet:
            path: /
            port: optimize-http
        readinessProbe:
          initialDelaySeconds: 60
          periodSeconds: 30
          httpGet:
            path: /
            port: optimize-http
        resources:
          requests:
            cpu: 1
            memory: 2Gi
          limits:
            cpu: 1
            memory: 2Gi
        volumeMounts:
        - name: config
          mountPath: /optimize/config/environment-config.yaml
          subPath: environment-config.yaml
        - name: config
          mountPath: /optimize/config/OptimizeLicense.txt
          subPath: OptimizeLicense.txt
################################################################################
      - name: cambpm
        image: "camunda/camunda-bpm-platform:@CAMBPM_VERSION@"
        command: ["/camunda/configure-and-run.sh"]
        env:
        - name: JAVA_OPTS
          value: "-Xms1g -Xmx1g -XX:MaxMetaspaceSize=256m -Ddb.username=$DB_USERNAME -Ddb.password=$DB_PASSWORD"
        - name: SKIP_DB_CONFIG
          value: "true"
        - name: WAIT_FOR
          value: localhost:5432
        - name: DB_USERNAME
          value: app
        - name: DB_PASSWORD
          value: app
        ports:
        - containerPort: 8080
          name: cambpm-http
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          httpGet:
            path: /engine-rest/engine
            port: cambpm-http
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          httpGet:
            path: /engine-rest/engine
            port: cambpm-http
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 1
            memory: 2Gi
        volumeMounts:
        - name: config
          mountPath: /camunda/conf/bpm-platform.xml
          subPath: bpm-platform.xml
        - name: config
          mountPath: /camunda/conf/server.xml
          subPath: server.xml
        - name: config
          mountPath: /camunda/configure-and-run.sh
          subPath: configure-and-run.sh
################################################################################
      - name: postgres
        image: postgres:12-alpine
        ports:
        - containerPort: 5432
          name: database
        env:
        - name: POSTGRES_USER
          value: app
        - name: POSTGRES_PASSWORD
          value: app
        - name: POSTGRES_DB
          value: app
        readinessProbe:
          tcpSocket:
            port: database
          initialDelaySeconds: 5
        resources:
          requests:
            memory: "256Mi"
          limits:
            memory: "256Mi"
################################################################################
      - name: elasticsearch
        image: "docker.elastic.co/elasticsearch/elasticsearch-oss:@ES_VERSION@"
        env:
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        - name: cluster.name
          value: elasticsearch
        - name: discovery.type
          value: single-node
        - name: bootstrap.memory_lock
          value: "true"
        - name: processors
          value: "1"
        securityContext:
          capabilities:
            add:
            - IPC_LOCK
        ports:
        - containerPort: 9200
          name: es-http
        - containerPort: 9300
          name: es-transport
        livenessProbe:
          tcpSocket:
            port: es-transport
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          tcpSocket:
            port: es-transport
          initialDelaySeconds: 30
          periodSeconds: 15
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 1
            memory: 1Gi
################################################################################
      - name: zeebe
        image: camunda/zeebe:1.0.0-alpha1
        command: ["/bin/sh"]
        args: ["-c", "sleep 20 && tini -s /usr/local/bin/startup.sh"]
        env:
        - name: ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME
          value: io.zeebe.exporter.ElasticsearchExporter
        - name: ZEEBE_HOST
          value: 0.0.0.0
        - name: JAVA_TOOL_OPTIONS
          value: "-Xms512m -Xmx512m"
        ports:
        - containerPort: 26500
          name: zeebe-gateway
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 1
            memory: 1Gi
