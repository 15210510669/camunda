[
  {
    "extension": "revapi.filter",
    "id": "filter",
    "configuration": {
      "archives": {
        "justification": "Ignore everything not included in the module itself",
        "include": ["io\\.camunda:zeebe-protocol:.*"]
      }
    }
  },
  {
    "extension": "revapi.differences",
    "id": "differences",
    "configuration": {
      "differences": [
        {
          "justification": "Ignore Enum order for BpmnElementType as ordinal() is not used and the elements are grouped in the enum.",
          "code": "java.field.enumConstantOrderChanged",
          "classQualifiedName": "io.camunda.zeebe.protocol.record.value.BpmnElementType"
        },
        {
          "justification": "Ignore Enum order for ValueType as ordinal() is not used",
          "code": "java.field.enumConstantOrderChanged",
          "classQualifiedName": "io.camunda.zeebe.protocol.record.ValueType"
        },
        {
          "justification": "Ignore Enum order for RejectionType as ordinal() is not used",
          "code": "java.field.enumConstantOrderChanged",
          "match": "io.camunda.zeebe.protocol.record.RejectionType"
        },
        {
          "justification": "Ignore new methods for Protocol Record interfaces, as these are not meant to be implemented but simply consumed; as such, new methods are perfectly fine to add",
          "code": "java.method.addedToInterface",
          "new": {
            "matcher": "java",
            "match": "interface * { * io.camunda.zeebe.protocol.record.**::^*(**); }"
          }
        },
        {
          "justification": "Ignore changes to the project version, as it changes on every release",
          "code": "java.field.constantValueChanged",
          "fieldName": "SEMANTIC_VERSION"
        },
        {
          "ignore": true,
          "code": "java.field.constantValueChanged",
          "old": "field io.camunda.zeebe.protocol.management.BackupListResponseEncoder.BackupsEncoder.HEADER_SIZE",
          "justification": "Only used for listing backups, this is an acceptable breaking change."
        },
        {
          "ignore": true,
          "code": "java.field.constantValueChanged",
          "old": "field io.camunda.zeebe.protocol.management.BackupListResponseDecoder.BackupsDecoder.HEADER_SIZE",
          "justification": "Only used for listing backups, this is an acceptable breaking change."
        },
        {
          "ignore": true,
          "code": "java.field.constantValueChanged",
          "old": "field io.camunda.zeebe.protocol.management.BackupListResponseDecoder.BackupsDecoder.HEADER_SIZE",
          "justification": "Only used for listing backups, this is an acceptable breaking change."
        },
        {
          "ignore": true,
          "code": "java.method.returnTypeChanged",
          "old": "method short io.camunda.zeebe.protocol.management.BackupListResponseDecoder.BackupsDecoder::countMaxValue()",
          "new": "method int io.camunda.zeebe.protocol.management.BackupListResponseDecoder.BackupsDecoder::countMaxValue()",
          "justification": "Only used for listing backups, this is an acceptable breaking change."
        },
        {
          "ignore": true,
          "code": "java.method.returnTypeChanged",
          "old": "method short io.camunda.zeebe.protocol.management.BackupListResponseDecoder.BackupsDecoder::countMinValue()",
          "new": "method int io.camunda.zeebe.protocol.management.BackupListResponseDecoder.BackupsDecoder::countMinValue()",
          "justification": "Only used for listing backups, this is an acceptable breaking change."
        },
        {
          "ignore": true,
          "code": "java.method.returnTypeChanged",
          "old": "method short io.camunda.zeebe.protocol.management.BackupListResponseEncoder.BackupsEncoder::countMaxValue()",
          "new": "method int io.camunda.zeebe.protocol.management.BackupListResponseEncoder.BackupsEncoder::countMaxValue()",
          "justification": "Only used for listing backups, this is an acceptable breaking change."
        },
        {
          "ignore": true,
          "code": "java.method.returnTypeChanged",
          "old": "method short io.camunda.zeebe.protocol.management.BackupListResponseEncoder.BackupsEncoder::countMinValue()",
          "new": "method int io.camunda.zeebe.protocol.management.BackupListResponseEncoder.BackupsEncoder::countMinValue()",
          "justification": "Only used for listing backups, this is an acceptable breaking change."
        },
        {
          "ignore": true,
          "code": "java.class.removed",
          "old": "class io.camunda.zeebe.protocol.management.GroupSizeEncodingDecoder",
          "justification": "This is no longer used for listing backups"
        },
        {
          "ignore": true,
          "code": "java.class.removed",
          "old": "class io.camunda.zeebe.protocol.management.GroupSizeEncodingEncoder",
          "justification": "This is no longer used for listing backups"
        }
      ]
    }
  }
]
