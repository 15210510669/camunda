<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.optimize</groupId>
    <artifactId>qa</artifactId>
    <version>2.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>upgrade-es-schema-tests</artifactId>
  <packaging>jar</packaging>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>docker-start</id>
            <phase>test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <environmentVariables>
                <CAMBPM_VERSION>${camunda.engine.version}</CAMBPM_VERSION>
                <ES_VERSION>${elasticsearch.version}</ES_VERSION>
              </environmentVariables>
              <skip>${skip.docker}</skip>
              <executable>docker-compose</executable>
              <workingDirectory>../../</workingDirectory>
              <arguments>
                <argument>-f</argument>
                <argument>${docker.compose.file}</argument>
                <argument>up</argument>
                <argument>-d</argument>
                <argument>--force-recreate</argument>
                <argument>--renew-anon-volumes</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifact>org.camunda.optimize:camunda-optimize:${project.previousVersion}:zip:full</artifact>
              <outputDirectory>${project.build.directory}/prevVersion/</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>test</phase>
            <configuration>
              <target>
                <sleep seconds="15" />
                <echo message="Starting Optimize ${project.previousVersion}..." />
                <exec dir="${project.build.directory}/prevVersion/"
                      executable="${project.build.directory}/prevVersion/optimize-startup.sh"
                      spawn="true" />
                <echo message="Waiting for Optimize to populate ES..." />
                <exec executable="/bin/bash">
                  <arg value="-c" />
                  <arg value="until test $(curl -s 'http://localhost:9200/optimize-metadata/_count' | jq '.count // 0') -eq 1; do sleep 2; done" />
                </exec>
                <echo message="Killing Optimize ${project.previousVersion}..." />
                <exec executable="/bin/bash">
                  <arg value="-c" />
                  <arg value='pkill -f org.camunda.optimize.Main' />
                </exec>
                <echo message="Running migration script from ${project.previousVersion} to ${project.version}..." />
                <exec dir="${project.build.directory}/../../../"
                      executable="/bin/bash">
                  <arg value="-c" />
                  <arg value="cp upgrade/target/upgrade-optimize-from-${project.previousVersion}-to-${project.version}.jar ${project.build.directory}/prevVersion/upgrade/upgrade-optimize.jar" />
                </exec>
                <exec executable="/bin/bash">
                  <arg value="-c" />
                  <arg value="java -jar ${project.build.directory}/prevVersion/upgrade/upgrade-optimize.jar --skip-warning" />
                </exec>
               </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
