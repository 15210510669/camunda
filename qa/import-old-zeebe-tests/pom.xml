<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.camunda</groupId>
    <artifactId>operate-qa</artifactId>
    <version>1.1.0-SNAPSHOT</version>
  </parent>

  <name>Operate QA Import From Old Zeebe Tests</name>
  <artifactId>operate-qa-import-old-zeebe-tests</artifactId>

  <properties>
    <plugin.version.license>3.0</plugin.version.license>
    <license.header>${project.baseUri}/../../license/license-header</license.header>
  </properties>


  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-bom</artifactId>
        <version>${version.zeebe.old}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <dependencies>

    <!-- tests to run -->
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>operate-qa-it-tests</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>operate-webapp</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>operate-importer</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>operate-archiver</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>operate-qa-util</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- ZEEBE -->
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-client-java</artifactId>
    </dependency>
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-protocol</artifactId>
    </dependency>
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-broker</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-elasticsearch-exporter</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.elasticsearch.client</groupId>
          <artifactId>elasticsearch-rest-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.elasticsearch</groupId>
          <artifactId>elasticsearch-x-content</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- ELASTICSEARCH -->

    <dependency>
      <groupId>org.elasticsearch.client</groupId>
      <artifactId>elasticsearch-rest-high-level-client</artifactId>
    </dependency>

    <!-- TEST CONTAINERS -->
    <dependency>
      <groupId>io.zeebe</groupId>
      <artifactId>zeebe-test-container</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>elasticsearch</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.glassfish/javax.json -->

    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
    </dependency>

    <!-- Micrometer Prometheus -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <!-- TEST -->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-junit-jupiter</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>

    <plugins>

      <!-- LICENSE PLUGIN -->
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <forkCount>${env.OLD_ZEEBE_TESTS_THREADS}</forkCount>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <failIfNoTests>true</failIfNoTests>
          <dependenciesToScan>
            <dependency>io.camunda:operate-qa-it-tests</dependency>
          </dependenciesToScan>
          <includes>
            <include>io/camunda/operate/zeebeimport/**/*.java</include>
          </includes>
          <excludes>
            <exclude>**/ImportSeveralVersionsTest.java</exclude>
            <!-- <exclude>**/FlowNodeInstanceIT.java</exclude>
            <exclude>**/FlowNodeMetadataIT.java</exclude>
            <exclude>**/ZeebeImport*.java</exclude> -->
          </excludes>
          <systemPropertyVariables>
            <spring.profiles.active>test,old-zeebe</spring.profiles.active>
          </systemPropertyVariables>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>skipTests</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <skipTests>true</skipTests>
      </properties>
    </profile>
  </profiles>

</project>
