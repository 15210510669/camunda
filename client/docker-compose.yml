version: '2.4'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION:-8.9.0}
    container_name: elasticsearch
    environment:
      - TZ=Europe/Berlin
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - cluster.name=elasticsearch
      - action.destructive_requires_name=false
      - http.port=9200
      - ES_JAVA_OPTS=-Xms${ELASTIC_JVM_MEMORY:-1}g -Xmx${ELASTIC_JVM_MEMORY:-1}g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    restart: always
    cpu_count: 4
    mem_limit: 2g
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:9200/_cat/health | grep -q green']
      interval: 30s
      timeout: 5s
      retries: 3
  cambpm:
    image: registry.camunda.cloud/cambpm-ee/camunda-bpm-platform-ee:${CAMBPM_VERSION:-7.19.0}
    container_name: cambpm
    environment:
      - DB_DRIVER=org.postgresql.Driver
      - DB_PASSWORD=camunda
      - DB_USERNAME=camunda
      - DB_URL=jdbc:postgresql://postgres:5432/engine
      - TZ=Europe/Berlin
      - OPTIMIZE_JAVA_OPTS=-Xms2g -Xmx2g -XX:MaxMetaspaceSize=256m
    ports:
      - 8080:8080
      - 9092:9092
    restart: always
    mem_limit: 3g
    healthcheck:
      test: ['CMD-SHELL', 'wget -q -O- http://localhost:8080/engine-rest/engine | grep -q default']
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      # this prevents the default process deployments, as we generate or use a prepared dump anyway
      - './:/camunda/webapps/camunda-invoice'
    depends_on:
      - postgres
  postgres:
    image: postgres:16.2@sha256:6b841c8f6a819884207402f1209a8116844365df15fca8cf556fc54a24c70800
    container_name: postgres
    command:
      [
        'postgres',
        '-c',
        'max_connections=200',
        '-c',
        'effective_cache_size=4GB',
        '-c',
        'shared_buffers=2GB',
        '-c',
        'synchronous_commit=off',
        '-c',
        'log_statement=none',
        '-c',
        'checkpoint_timeout=600',
        '-c',
        'max_wal_size=30GB',
      ]
    environment:
      - POSTGRES_PASSWORD=camunda
      - POSTGRES_USER=camunda
      - POSTGRES_DB=engine
      - TZ=Europe/Berlin
    ports:
      - 5432:5432
    restart: always
    mem_limit: 4g
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "PGPASSWORD=$${POSTGRES_PASSWORD} psql --username=$${POSTGRES_USER} --host=localhost --dbname=$${POSTGRES_DB} --command='\\q'",
        ]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - ./databaseDumps:/dump/
