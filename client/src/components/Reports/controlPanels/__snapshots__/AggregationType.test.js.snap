// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render a user task duration selection for user task duration reports 1`] = `
<Popover
  className="AggregationType"
  renderInPortal="AggregationType"
  title={
    <React.Fragment>
      <span
        className="content"
      >
        P50
      </span>
      <Icon
        className="editIcon"
        type="edit-small"
      />
    </React.Fragment>
  }
>
  <Form
    compact={true}
  >
    <h4>
      User Task Duration
    </h4>
    <fieldset>
      <div
        key="total"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="Total"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="work"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="Work"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="idle"
      >
        <span>
          <Switch
            checked={true}
            disabled={true}
            label="Idle"
            onChange={[Function]}
          />
        </span>
      </div>
    </fieldset>
    <h4>
      Basic aggregations
    </h4>
    <fieldset>
      <div
        key="sum"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="Sum"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="min"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="Minimum"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="avg"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="Average"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="max"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="Maximum"
            onChange={[Function]}
          />
        </span>
      </div>
    </fieldset>
    <h4>
      Percentile aggregations
    </h4>
    <fieldset>
      <div
        key="99"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="P99"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="95"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="P95"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="90"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="P90"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="75"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="P75"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="50"
      >
        <span>
          <Switch
            checked={true}
            disabled={true}
            label="P50 (median)"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="25"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="P25"
            onChange={[Function]}
          />
        </span>
      </div>
    </fieldset>
  </Form>
</Popover>
`;

exports[`should render an aggregation selection for duration reports 1`] = `
<Popover
  className="AggregationType"
  renderInPortal="AggregationType"
  title={
    <React.Fragment>
      <span
        className="content"
      >
        P50
      </span>
      <Icon
        className="editIcon"
        type="edit-small"
      />
    </React.Fragment>
  }
>
  <Form
    compact={true}
  >
    <h4>
      Basic aggregations
    </h4>
    <fieldset>
      <div
        key="sum"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="Sum"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="min"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="Minimum"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="avg"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="Average"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="max"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="Maximum"
            onChange={[Function]}
          />
        </span>
      </div>
    </fieldset>
    <h4>
      Percentile aggregations
    </h4>
    <fieldset>
      <div
        key="99"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="P99"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="95"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="P95"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="90"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="P90"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="75"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="P75"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="50"
      >
        <span>
          <Switch
            checked={true}
            disabled={true}
            label="P50 (median)"
            onChange={[Function]}
          />
        </span>
      </div>
      <div
        key="25"
      >
        <span>
          <Switch
            checked={false}
            disabled={false}
            label="P25"
            onChange={[Function]}
          />
        </span>
      </div>
    </fieldset>
  </Form>
</Popover>
`;

exports[`should render nothing if the current result is no duration and the view is not variable 1`] = `""`;
