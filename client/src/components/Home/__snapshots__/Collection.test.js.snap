// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render content depending on the selected tab 1`] = `
<div
  className="Collection"
>
  <div
    className="header"
  >
    <div
      className="indicator"
    />
    <div
      className="icon"
    >
      <ForwardRef(SvgCollection) />
    </div>
    <div
      className="text"
    >
      <div
        className="type"
      >
        Collection
      </div>
      <div
        className="name"
      >
        <span
          title="aCollectionName"
        >
          aCollectionName
        </span>
        <Dropdown
          label={
            <Icon
              size="24px"
              type="overflow-menu-vertical"
            />
          }
        >
          <ForwardRef(DropdownOption)
            onClick={[Function]}
          >
            <Icon
              type="edit"
            />
            Edit
          </ForwardRef(DropdownOption)>
          <ForwardRef(DropdownOption)
            onClick={[Function]}
          >
            <Icon
              type="copy-document"
            />
            Copy
          </ForwardRef(DropdownOption)>
          <ForwardRef(DropdownOption)
            onClick={[Function]}
          >
            <Icon
              type="delete"
            />
            Delete
          </ForwardRef(DropdownOption)>
        </Dropdown>
      </div>
    </div>
    <ul
      className="navigation"
    >
      <li
        className=""
      >
        <Link
          to="."
        >
          Dashboards & Reports
        </Link>
      </li>
      <li
        className=""
      >
        <Link
          to="alerts"
        >
          Alerts
        </Link>
      </li>
      <li
        className="active"
      >
        <Link
          to="users"
        >
          Users
        </Link>
      </li>
      <li
        className=""
      >
        <Link
          to="sources"
        >
          Data Sources
        </Link>
      </li>
    </ul>
  </div>
  <div
    className="content"
  >
    <UserListErrorHandler
      collection="aCollectionId"
      onChange={[Function]}
      readOnly={false}
    />
  </div>
  <DeleterErrorHandler
    checkConflicts={[Function]}
    entity={false}
    onClose={[Function]}
    onDelete={[Function]}
    type={false}
  />
  <CopierErrorHandler
    collection="aCollectionId"
    entity={null}
    onCancel={[Function]}
    onCopy={[Function]}
  />
</div>
`;
