// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot 1`] = `
<div
  className="EventTable"
>
  <div
    className="header"
  >
    <b>
      Events List
    </b>
    <Switch
      checked={true}
      label="Show suggested Events"
      onChange={[Function]}
    />
    <EventSources
      sources={
        Array [
          Object {
            "configuration": Object {
              "includeAllGroups": true,
            },
            "type": "external",
          },
        ]
      }
    />
    <SearchInput
      className="searchInput"
      onChange={[Function]}
      onClear={[Function]}
      placeholder="Search for name..."
      required={true}
      value=""
    />
    <ForwardRef(Button)
      className="collapseButton"
      onClick={[Function]}
    >
      <Icon
        type="collapse"
      />
    </ForwardRef(Button)>
  </div>
  <Table
    body={
      Array [
        Object {
          "content": Array [
            <ForwardRef(Input)
              checked={true}
              disabled={false}
              onChange={[Function]}
              type="checkbox"
            />,
            <Select
              onChange={[Function]}
              value="end"
            >
              <Option
                disabled={false}
                value="end"
              >
                End
              </Option>
              <Option
                disabled={false}
                value="start"
              >
                Start
              </Option>
            </Select>,
            "Order Processed",
            "eventGroup",
            "order-service",
            10,
          ],
          "props": Object {
            "className": "OrderProcessed mapped",
            "onClick": [Function],
          },
        },
        Object {
          "content": Array [
            <ForwardRef(Input)
              checked={false}
              disabled={true}
              onChange={[Function]}
              type="checkbox"
            />,
            <span
              className="disabled"
            >
              --
            </span>,
            "Order Accepted",
            "eventGroup",
            "order-service",
            "--",
          ],
          "props": Object {
            "className": "OrderAccepted disabled",
            "onClick": [Function],
          },
        },
      ]
    }
    className=""
    disablePagination={true}
    head={
      Array [
        Object {
          "id": "checked",
          "label": "checked",
          "sortable": false,
        },
        Object {
          "id": "mapping",
          "label": "Mapped asâ€¦",
          "sortable": false,
        },
        Object {
          "id": "eventName",
          "label": "Event Name",
        },
        Object {
          "id": "group",
          "label": "Group",
        },
        Object {
          "id": "source",
          "label": "Source",
        },
        Object {
          "id": "count",
          "label": "Count",
        },
      ]
    }
    noData={
      <React.Fragment>
        
        No Events available.
      </React.Fragment>
    }
    noHighlight={true}
    sorting={
      Object {
        "by": "group",
        "order": "asc",
      }
    }
    updateSorting={[Function]}
  />
</div>
`;
