// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should display available options if dropdown is open 1`] = `
<div
  className="Typeahead"
>
  <ForwardRef(Input)
    className=""
    disabled={false}
    onBlur={[Function]}
    onChange={[Function]}
    onClear={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    value=""
  />
  <ForwardRef(Button)
    className="optionsButton"
    disabled={false}
    onClick={[Function]}
  >
    <Icon
      className="downIcon"
      type="down"
    />
  </ForwardRef(Button)>
  <div
    className="searchResultsList"
    onMouseUp={[Function]}
    style={
      Object {
        "maxHeight": "300px",
        "maxWidth": undefined,
      }
    }
  >
    <ForwardRef(DropdownOption)
      className="searchResult"
      key="foo"
      onClick={[Function]}
      onMouseDown={[Function]}
      style={
        Object {
          "height": "30px",
          "minWidth": undefined,
        }
      }
    >
      foo
    </ForwardRef(DropdownOption)>
    <ForwardRef(DropdownOption)
      className="searchResult"
      key="bar"
      onClick={[Function]}
      onMouseDown={[Function]}
      style={
        Object {
          "height": "30px",
          "minWidth": undefined,
        }
      }
    >
      bar
    </ForwardRef(DropdownOption)>
  </div>
</div>
`;

exports[`should format the data based on the provided formatter 1`] = `
<div
  className="Typeahead"
>
  <ForwardRef(Input)
    className=""
    disabled={false}
    onBlur={[Function]}
    onChange={[Function]}
    onClear={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    value=""
  />
  <ForwardRef(Button)
    className="optionsButton"
    disabled={false}
    onClick={[Function]}
  >
    <Icon
      className="downIcon"
      type="down"
    />
  </ForwardRef(Button)>
  <div
    className="searchResultsList"
    onMouseUp={[Function]}
    style={
      Object {
        "maxHeight": "300px",
        "maxWidth": undefined,
      }
    }
  >
    <ForwardRef(DropdownOption)
      className="searchResult"
      key="foofoo"
      onClick={[Function]}
      onMouseDown={[Function]}
      style={
        Object {
          "height": "30px",
          "minWidth": undefined,
        }
      }
    >
      foofoo
    </ForwardRef(DropdownOption)>
    <ForwardRef(DropdownOption)
      className="searchResult"
      key="barbar"
      onClick={[Function]}
      onMouseDown={[Function]}
      style={
        Object {
          "height": "30px",
          "minWidth": undefined,
        }
      }
    >
      barbar
    </ForwardRef(DropdownOption)>
  </div>
</div>
`;

exports[`should only display entries that match the typeahead value 1`] = `
<div
  className="Typeahead"
>
  <ForwardRef(Input)
    className=""
    disabled={false}
    onBlur={[Function]}
    onChange={[Function]}
    onClear={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    value="foo"
  />
  <ForwardRef(Button)
    className="optionsButton"
    disabled={false}
    onClick={[Function]}
  >
    <Icon
      className="downIcon"
      type="down"
    />
  </ForwardRef(Button)>
  <div
    className="searchResultsList"
    onMouseUp={[Function]}
    style={
      Object {
        "maxHeight": "300px",
        "maxWidth": undefined,
      }
    }
  >
    <ForwardRef(DropdownOption)
      className="searchResult"
      key="varFoo"
      onClick={[Function]}
      onMouseDown={[Function]}
      style={
        Object {
          "height": "30px",
          "minWidth": undefined,
        }
      }
    >
      <span
        key="0"
      >
        var
      </span>
      <span
        className="textBold"
        key="1"
      >
        Foo
      </span>
      <span
        key="2"
      />
    </ForwardRef(DropdownOption)>
    <ForwardRef(DropdownOption)
      className="searchResult"
      key="varFoobar"
      onClick={[Function]}
      onMouseDown={[Function]}
      style={
        Object {
          "height": "30px",
          "minWidth": undefined,
        }
      }
    >
      <span
        key="0"
      >
        var
      </span>
      <span
        className="textBold"
        key="1"
      >
        Foo
      </span>
      <span
        key="2"
      >
        bar
      </span>
    </ForwardRef(DropdownOption)>
  </div>
</div>
`;

exports[`should only display entries that match the typeahead value, even if there is a formatter 1`] = `
<div
  className="Typeahead"
>
  <ForwardRef(Input)
    className=""
    disabled={false}
    onBlur={[Function]}
    onChange={[Function]}
    onClear={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    value="foobarvar"
  />
  <ForwardRef(Button)
    className="optionsButton"
    disabled={false}
    onClick={[Function]}
  >
    <Icon
      className="downIcon"
      type="down"
    />
  </ForwardRef(Button)>
  <div
    className="searchResultsList"
    onMouseUp={[Function]}
    style={
      Object {
        "maxHeight": "300px",
        "maxWidth": undefined,
      }
    }
  >
    <ForwardRef(DropdownOption)
      className="searchResult"
      key="varFoobarvarFoobar"
      onClick={[Function]}
      onMouseDown={[Function]}
      style={
        Object {
          "height": "30px",
          "minWidth": undefined,
        }
      }
    >
      <span
        key="0"
      >
        var
      </span>
      <span
        className="textBold"
        key="1"
      >
        Foobarvar
      </span>
      <span
        key="2"
      >
        Foobar
      </span>
    </ForwardRef(DropdownOption)>
  </div>
</div>
`;
