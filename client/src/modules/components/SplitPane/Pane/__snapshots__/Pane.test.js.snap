// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pane should render BottomExpandButton with DOWN icon if pane is BOTTOM and it's expanded 1`] = `
<Styled(Panel)
  expand={[Function]}
  expandedId="BOTTOM"
  isCollapsed={false}
  paneId="BOTTOM"
  resetExpanded={[Function]}
>
  <Foo
    isCollapsed={false}
    key=".0"
  />
  <Styled(ExpandButton)
    iconDirection="DOWN"
    onClick={[Function]}
  />
</Styled(Panel)>
`;

exports[`Pane should render BottomExpandButton with UP icon if pane is BOTTOM and it's not expanded 1`] = `
<Styled(Panel)
  expand={[Function]}
  expandedId="TOP"
  isCollapsed={true}
  paneId="BOTTOM"
  resetExpanded={[Function]}
>
  <Foo
    isCollapsed={true}
    key=".0"
  />
  <Styled(ExpandButton)
    iconDirection="UP"
    onClick={[Function]}
  />
</Styled(Panel)>
`;

exports[`Pane should render TopExpandButton with DOWN icon if pane is TOP and it's not expanded 1`] = `
<Styled(Panel)
  expand={[Function]}
  expandedId={null}
  isCollapsed={false}
  paneId="TOP"
  resetExpanded={[Function]}
>
  <Foo
    isCollapsed={false}
    key=".0"
  />
  <Styled(ExpandButton)
    iconDirection="DOWN"
    onClick={[Function]}
  />
</Styled(Panel)>
`;

exports[`Pane should render TopExpandButton with UP icon if pane is TOP and it's expanded 1`] = `
<Styled(Panel)
  expand={[Function]}
  expandedId="TOP"
  isCollapsed={false}
  paneId="TOP"
  resetExpanded={[Function]}
>
  <Foo
    isCollapsed={false}
    key=".0"
  />
  <Styled(ExpandButton)
    iconDirection="UP"
    onClick={[Function]}
  />
</Styled(Panel)>
`;

exports[`Pane should render children with isCollapsed false if the pane is not collapsed 1`] = `
<Styled(Panel)
  expand={[Function]}
  expandedId={null}
  isCollapsed={false}
  paneId="TOP"
  resetExpanded={[Function]}
>
  <Foo
    isCollapsed={false}
    key=".0"
  />
  <Styled(ExpandButton)
    iconDirection="DOWN"
    onClick={[Function]}
  />
</Styled(Panel)>
`;

exports[`Pane should render children with isCollapsed true if the pane is collapsed 1`] = `
<Styled(Panel)
  expand={[Function]}
  expandedId="BOTTOM"
  isCollapsed={true}
  paneId="TOP"
  resetExpanded={[Function]}
>
  <Foo
    isCollapsed={true}
    key=".0"
  />
  <Styled(ExpandButton)
    iconDirection="DOWN"
    onClick={[Function]}
  />
</Styled(Panel)>
`;
