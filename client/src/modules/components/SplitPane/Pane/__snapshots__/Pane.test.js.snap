// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pane should render BottomExpandButton with DOWN icon if pane is BOTTOM and it's expanded 1`] = `
<Styled(Panel)
  expandState="EXPANDED"
  handleExpand={[Function]}
  paneId="BOTTOM"
>
  <Foo
    expandState="EXPANDED"
    key=".0"
  />
  <Styled(ExpandButton)
    iconDirection="DOWN"
    onClick={[Function]}
  />
</Styled(Panel)>
`;

exports[`Pane should render BottomExpandButton with UP icon if pane is BOTTOM and it's not expanded 1`] = `
<Styled(Panel)
  expandState="COLLAPSED"
  handleExpand={[Function]}
  paneId="BOTTOM"
>
  <Foo
    expandState="COLLAPSED"
    key=".0"
  />
  <Styled(ExpandButton)
    iconDirection="UP"
    onClick={[Function]}
  />
</Styled(Panel)>
`;

exports[`Pane should render TopExpandButton with DOWN icon if pane is TOP and it's not expanded 1`] = `
<Styled(Panel)
  expandState="DEFAULT"
  handleExpand={[Function]}
  paneId="TOP"
>
  <Foo
    expandState="DEFAULT"
    key=".0"
  />
  <Styled(ExpandButton)
    iconDirection="DOWN"
    onClick={[Function]}
  />
</Styled(Panel)>
`;

exports[`Pane should render TopExpandButton with UP icon if pane is TOP and it's expanded 1`] = `
<Styled(Panel)
  expandState="EXPANDED"
  handleExpand={[Function]}
  paneId="TOP"
>
  <Foo
    expandState="EXPANDED"
    key=".0"
  />
  <Styled(ExpandButton)
    iconDirection="UP"
    onClick={[Function]}
  />
</Styled(Panel)>
`;

exports[`Pane should render children with expandState 1`] = `
<Styled(Panel)
  expandState="EXPANDED"
  handleExpand={[Function]}
  paneId="TOP"
>
  <Foo
    expandState="EXPANDED"
    key=".0"
  />
  <Styled(ExpandButton)
    iconDirection="UP"
    onClick={[Function]}
  />
</Styled(Panel)>
`;
