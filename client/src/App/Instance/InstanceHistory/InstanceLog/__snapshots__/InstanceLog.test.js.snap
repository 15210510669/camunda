// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InstanceLog should render entries if there are actvitiesDetails 1`] = `
<Themed(Styled(withStrippedProps(Component)))
  activitiesDetails={
    Object {
      "1": Object {
        "activityId": "activity1",
        "name": "someName1",
        "state": "someState1",
        "type": "someType1",
      },
      "2": Object {
        "activityId": "activity2",
        "name": "someName2",
        "state": "someState2",
        "type": "someType2",
      },
    }
  }
  instance={
    Object {
      "activities": Array [
        Object {
          "activityId": "activityId_0",
          "endDate": "2018-10-10T09:20:38.658Z",
          "id": "id_0",
          "startDate": "2018-10-10T09:20:38.658Z",
          "state": "ACTIVE",
        },
      ],
      "bpmnProcessId": "someKey",
      "endDate": null,
      "id": "id_1",
      "incidents": Array [
        Object {
          "activityId": Object {},
          "activityInstanceId": Object {},
          "errorMessage": "",
          "errorType": "",
          "id": "id_2",
          "jobId": "jobId_0",
        },
      ],
      "operations": Array [
        Object {
          "endDate": "2018-10-10T09:20:38.661Z",
          "errorMessage": "string",
          "startDate": "2018-10-10T09:20:38.661Z",
          "state": "SCHEDULED",
          "type": "UPDATE_RETRIES",
        },
      ],
      "startDate": "Sun, 01 Jul 2018 10:00:00 GMT",
      "state": "ACTIVE",
      "workflowId": "2",
      "workflowName": "someWorkflowName",
      "workflowVersion": "1",
    }
  }
  onActivityInstanceSelected={[MockFunction]}
  selectedActivityInstanceId={null}
>
  <styled.ul>
    <Themed(styled.li)
      isSelected={true}
    >
      &gt;
      <Themed(Styled(Themed(styled.button)))
        isSelected={true}
        onClick={[Function]}
      >
        <Themed(Styled(withStrippedProps(ReactComponent)))
          isSelected={true}
        />
        someWorkflowName
      </Themed(Styled(Themed(styled.button)))>
    </Themed(styled.li)>
    <Themed(styled.li)
      isSelected={false}
      key="1"
    >
      <Themed(styled.button)
        data-test="1"
        isSelected={false}
        onClick={[Function]}
      >
        <Themed(Styled(Themed(FlowNodeIcon)))
          isSelected={false}
          state="someState1"
          type="someType1"
        />
        someName1
      </Themed(styled.button)>
    </Themed(styled.li)>
    <Themed(styled.li)
      isSelected={false}
      key="2"
    >
      <Themed(styled.button)
        data-test="2"
        isSelected={false}
        onClick={[Function]}
      >
        <Themed(Styled(Themed(FlowNodeIcon)))
          isSelected={false}
          state="someState2"
          type="someType2"
        />
        someName2
      </Themed(styled.button)>
    </Themed(styled.li)>
  </styled.ul>
</Themed(Styled(withStrippedProps(Component)))>
`;
