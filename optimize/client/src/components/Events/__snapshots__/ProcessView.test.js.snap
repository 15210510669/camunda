// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot 1`] = `
<div
  className="ProcessView"
>
  <PageTitle
    pageName="Process"
    resourceName="Process Name"
  />
  <div
    className="header"
  >
    <div
      className="head"
    >
      <EntityName
        details={
          <LastModifiedInfo
            entity={
              Object {
                "id": "processId",
                "lastModified": "2020-11-11T11:11:11.111+0200",
                "lastModifier": "john",
                "mappings": Object {},
                "name": "Process Name",
                "state": "mapped",
                "xml": "Process XML",
              }
            }
          />
        }
      >
        Process Name
      </EntityName>
      <div
        className="tools"
      >
        <Button
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "innerRef": [Function],
                "onClick": [Function],
                "replace": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            }
          }
          className="edit-button"
          disabled={false}
          hasIconOnly={true}
          iconDescription="Edit"
          renderIcon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "size": [Function],
              },
              "render": [Function],
            }
          }
          to="edit"
        />
        <Button
          className="publish-button"
          disabled={false}
          hasIconOnly={true}
          iconDescription="Publish"
          kind="ghost"
          onClick={[Function]}
          renderIcon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "size": [Function],
              },
              "render": [Function],
            }
          }
        />
        <Button
          className="delete-button"
          disabled={false}
          hasIconOnly={true}
          iconDescription="Delete"
          kind="ghost"
          onClick={[Function]}
          renderIcon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "size": [Function],
              },
              "render": [Function],
            }
          }
        />
      </div>
    </div>
  </div>
  <div
    className="content"
  >
    <Themed(BPMNDiagramErrorHandler)
      xml="Process XML"
    >
      <ProcessRenderer
        mappings={Object {}}
      />
    </Themed(BPMNDiagramErrorHandler)>
  </div>
  <DeleterErrorHandler
    checkConflicts={[Function]}
    deleteEntity={[Function]}
    descriptionText="The '' process will be permanently deleted. This will result in the deletion of any associated reports inside and outside of collections."
    entity={null}
    onClose={[Function]}
    onDelete={[MockFunction]}
    type="process"
  />
</div>
`;
