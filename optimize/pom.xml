<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.camunda</groupId>
    <artifactId>zeebe-parent</artifactId>
    <version>8.6.0-SNAPSHOT</version>
    <relativePath>../parent/pom.xml</relativePath>
  </parent>

  <groupId>io.camunda.optimize</groupId>
  <artifactId>optimize-parent</artifactId>
  <version>8.6.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Camunda Optimize</name>

  <organization>
    <name>Camunda Services GmbH</name>
    <url>http://www.camunda.com</url>
  </organization>

  <modules>
    <!-- client should be built before distro -->
    <module>client</module>
    <module>util</module>
    <module>plugins</module>
    <module>backend</module>
    <module>qa</module>
    <module>../optimize-distro</module>
    <module>upgrade</module>
  </modules>

  <scm>
    <connection>scm:git:https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/camunda/camunda-optimize.git</connection>
    <developerConnection>scm:git:https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/camunda/camunda-optimize.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/camunda/camunda-optimize</url>
  </scm>

  <issueManagement>
    <system>Jira</system>
    <url>https://app.camunda.com/jira/browse/OPT/</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>camunda-nexus</id>
      <url>https://artifacts.camunda.com/artifactory/camunda-optimize/</url>
    </repository>
    <snapshotRepository>
      <id>camunda-nexus</id>
      <url>https://artifacts.camunda.com/artifactory/camunda-optimize-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.previousVersion>3.13.0</project.previousVersion>

    <camunda.engine.version>7.19.0</camunda.engine.version>
    <camunda.maven.artifacts.version>7.19.11-ee</camunda.maven.artifacts.version>

    <!-- We use this version to compile but run IT against containers with zeebe.docker.version -->
    <zeebe.version>8.6.0-alpha2</zeebe.version>
    <identity.version>8.6.0-alpha2</identity.version>
    <!-- We use this for the Zeebe test container version only -->
    <zeebe.docker.version>${zeebe.version}</zeebe.docker.version>

    <!-- maven plugins -->
    <surefire-plugin.version>3.2.5</surefire-plugin.version>

    <!-- database config -->
    <elasticsearch.version>7.17.21</elasticsearch.version>
    <opensearch.version>2.10.1</opensearch.version>
    <awssdk.version>2.25.45</awssdk.version>
    <!-- The default es 8 version we are going to be testing with-->
    <elasticsearch8.test.version>8.9.0</elasticsearch8.test.version>
    <!-- The default opensearch version we are going to be testing with-->
    <opensearch.test.version>2.8.0</opensearch.test.version>
    <!--The least supported elasticsearch version we should test against-->
    <elasticsearch.test.version>8.9.0</elasticsearch.test.version>
    <!--the ElasticSearch version of the previous Optimize version -->
    <previous.optimize.elasticsearch.version>8.9.0</previous.optimize.elasticsearch.version>
    <!-- https://www.elastic.co/guide/en/elasticsearch/client/java-api/6.5/_using_another_logger.html -->
    <elasticsearch.log4j.version>2.23.1</elasticsearch.log4j.version>

    <jackson.version>2.17.1</jackson.version>
    <jsonpath.version>2.9.0</jsonpath.version>
    <apache.http5-client.version>5.3.1</apache.http5-client.version>
    <apache.http5-core.version>5.2.4</apache.http5-core.version>
    <guava.version>33.2.0-jre</guava.version>
    <spring.boot.version>3.3.0</spring.boot.version>
    <spring.version>6.1.6</spring.version>
    <httpclient.version>4.5.14</httpclient.version>
    <quartz.version>2.3.2</quartz.version>
    <jakarta.rs-api.version>4.0.0</jakarta.rs-api.version>
    <netty.version>4.1.110.Final</netty.version>
    <lombok.version>1.18.32</lombok.version>
    <logback.version>1.5.6</logback.version>
    <slf4j.version>2.0.13</slf4j.version>
    <commons.io.version>2.16.1</commons.io.version>

    <version.node>v20.9.0</version.node>
    <version.yarn>v1.22.19</version.yarn>

    <!-- testing config -->
    <h2.version>2.2.224</h2.version>
    <postgres.version>42.7.3</postgres.version>
    <junit.jupiter.version>5.10.2</junit.jupiter.version>
    <assertj.version>3.26.0</assertj.version>
    <google-java-format.plugin.version>1.22.0</google-java-format.plugin.version>
    <!-- This is the default profile used for the DB selection in tests -->
    <database.type>elasticsearch</database.type>

    <skipTests>false</skipTests>
    <skip.unit.tests>${skipTests}</skip.unit.tests>
    <skip.docker>false</skip.docker>
    <docker.compose.file>docker-compose.yml</docker.compose.file>

    <maven.compiler.target>21</maven.compiler.target>
    <maven.compiler.source>21</maven.compiler.source>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${spring.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Common test dependencies-->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- Fix for bug with downloading snapshots from Camunda Nexus using groups with RELEASE and SNAPSHOTS -->
  <repositories>
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>camunda-nexus</id>
      <name>Camunda Nexus</name>
      <url>https://artifacts.camunda.com/artifactory/internal/</url>
    </repository>

    <repository>
      <id>central</id>
      <name>Maven Central</name>
      <url>https://repo1.maven.org/maven2/</url>
    </repository>

    <!-- add the elasticsearch repo -->
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>elasticsearch-releases</id>
      <url>https://artifacts.elastic.co/maven</url>
      <layout>default</layout>
    </repository>
  </repositories>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.6.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>templating-maven-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.6.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire-plugin.version}</version>
          <configuration>
            <skipTests>${skip.unit.tests}</skipTests>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <useModulePath>false</useModulePath>
            <argLine>--add-opens java.base/java.util=ALL-UNNAMED</argLine>
            <systemPropertyVariables>
              <database.type>${database.type}</database.type>
            </systemPropertyVariables>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.junit.jupiter</groupId>
              <artifactId>junit-jupiter-engine</artifactId>
              <version>${junit.jupiter.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${surefire-plugin.version}</version>
          <configuration>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <useModulePath>false</useModulePath>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.6.0</version>
          <configuration>
            <createDependencyReducedPom>false</createDependencyReducedPom>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven3-plugin</artifactId>
          <version>1.10.13</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>1.7.0</version>
          <extensions>true</extensions>
          <configuration>
            <serverId>camunda-nexus</serverId>
            <nexusUrl>https://artifacts.camunda.com/artifactory/</nexusUrl>
            <skipStaging>true</skipStaging>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>1.15.0</version>
        </plugin>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>4.5</version>
        </plugin>
        <!-- Google code format plugin -->
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.43.0</version>
          <configuration>
            <java>
              <includes>
                <include>**/*.java</include>
              </includes>
              <googleJavaFormat>
                <version>${google-java-format.plugin.version}</version>
                <style>GOOGLE</style>
              </googleJavaFormat>
            </java>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.google.googlejavaformat</groupId>
              <artifactId>google-java-format</artifactId>
              <version>${google-java-format.plugin.version}</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>com.amashchenko.maven.plugin</groupId>
        <artifactId>gitflow-maven-plugin</artifactId>
        <version>1.21.0</version>
        <configuration>
          <gitFlowConfig>
            <productionBranch>latest</productionBranch>
            <developmentBranch>master</developmentBranch>
            <supportBranchPrefix>maintenance/</supportBranchPrefix>
          </gitFlowConfig>
          <commitDevelopmentVersionAtStart>true</commitDevelopmentVersionAtStart>
          <useSnapshotInRelease>true</useSnapshotInRelease>
          <useSnapshotInSupport>true</useSnapshotInSupport>
          <skipTestProject>true</skipTestProject>
          <skipTag>true</skipTag>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.commonjava.maven.plugins</groupId>
        <artifactId>directory-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <id>directories</id>
            <goals>
              <goal>directory-of</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <property>parent.basedir</property>
              <project>
                <groupId>io.camunda.optimize</groupId>
                <artifactId>optimize-parent</artifactId>
              </project>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <header>${maven.multiModuleProjectDirectory}/parent/COPYING-HEADER.txt</header>
          <includes>
            <include>**/*.java</include>
          </includes>
          <mapping>
            <java>SLASHSTAR_STYLE</java>
          </mapping>
        </configuration>
        <executions>
          <execution>
            <id>check-java-copyright</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <release>17</release>
        </configuration>
      </plugin>
    </plugins>

  </build>

  <profiles>

    <!-- engine profiles-->
    <profile>
      <id>engine-latest</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties></properties>
    </profile>
    <profile>
      <id>engine-snapshot</id>
      <properties>
        <!--
        Note: the below is intended for CI usage only, as part of
        engine_compatibility job.
        -->
        <camunda.engine.version>${env.CAMBPM_SNAPSHOT_VERSION}</camunda.engine.version>
      </properties>
    </profile>
    <profile>
      <id>engine-7.20</id>
      <properties>
        <camunda.engine.version>7.20.0</camunda.engine.version>
      </properties>
    </profile>
    <profile>
      <id>engine-7.19</id>
      <properties>
        <camunda.engine.version>7.19.0</camunda.engine.version>
      </properties>
    </profile>

    <!-- release profile-->
    <profile>
      <id>release</id>
      <properties>
        <skip.docker>true</skip.docker>
        <maven.javadoc.skip>true</maven.javadoc.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <version>3.0.1</version>
            <configuration>
              <releaseProfiles>engine-latest</releaseProfiles>
              <localCheckout>true</localCheckout>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.3.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>attach-test-sources</id>
                <goals>
                  <goal>test-jar-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- testing profiles-->
    <profile>
      <id>it</id>
      <properties>
        <skip.unit.tests>true</skip.unit.tests>
      </properties>
    </profile>
    <profile>
      <id>ccsm-it</id>
      <properties>
        <skip.unit.tests>true</skip.unit.tests>
      </properties>
    </profile>

    <!-- database profiles-->
    <profile>
      <id>elasticsearch</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <database.type>elasticsearch</database.type>
      </properties>
    </profile>
    <!-- database profiles-->
    <profile>
      <id>opensearch</id>
      <properties>
        <database.type>opensearch</database.type>
      </properties>
    </profile>

    <!-- profile to auto format -->
    <profile>
      <id>autoFormat</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-format</id>
                <goals>
                  <goal>apply</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- profile to perform strict validation checks -->
    <profile>
      <id>checkFormat</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>validate</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
